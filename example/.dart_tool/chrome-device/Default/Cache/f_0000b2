define(['dart_sdk', 'packages/mapbox_gl_dart/src/interop/js.dart', 'packages/mapbox_gl_dart/src/style/sources/source.dart', 'packages/mapbox_gl_dart/src/style/layers/layer.dart', 'packages/mapbox_gl_dart/src/utils.dart'], (function load__packages__mapbox_gl_dart__src__util__evented_dart(dart_sdk, packages__mapbox_gl_dart__src__interop__js$46dart, packages__mapbox_gl_dart__src__style__sources__source$46dart, packages__mapbox_gl_dart__src__style__layers__layer$46dart, packages__mapbox_gl_dart__src__utils$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const js = dart_sdk.js;
  const html = dart_sdk.html;
  const js_util = dart_sdk.js_util;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const js$ = packages__mapbox_gl_dart__src__interop__js$46dart.src__interop__js;
  const source$ = packages__mapbox_gl_dart__src__style__sources__source$46dart.src__style__sources__source;
  const layer$ = packages__mapbox_gl_dart__src__style__layers__layer$46dart.src__style__layers__layer;
  const utils = packages__mapbox_gl_dart__src__utils$46dart.src__utils;
  var evented = Object.create(dart.library);
  var popup = Object.create(dart.library);
  var marker = Object.create(dart.library);
  var map = Object.create(dart.library);
  var touch_zoom_rotate = Object.create(dart.library);
  var scroll_zoom = Object.create(dart.library);
  var keyboard = Object.create(dart.library);
  var drag_rotate = Object.create(dart.library);
  var drag_pan = Object.create(dart.library);
  var dblclick_zoom = Object.create(dart.library);
  var box_zoom = Object.create(dart.library);
  var events = Object.create(dart.library);
  var navigation_control = Object.create(dart.library);
  var logo_control = Object.create(dart.library);
  var geolocate_control = Object.create(dart.library);
  var camera = Object.create(dart.library);
  var style_image = Object.create(dart.library);
  var style = Object.create(dart.library);
  var vector_source = Object.create(dart.library);
  var geojson_source = Object.create(dart.library);
  var symbol_layer = Object.create(dart.library);
  var line_layer = Object.create(dart.library);
  var circle_layer = Object.create(dart.library);
  var evaluation_parameters = Object.create(dart.library);
  var point = Object.create(dart.library);
  var lng_lat_bounds = Object.create(dart.library);
  var lng_lat = Object.create(dart.library);
  var evented_interop = Object.create(dart.library);
  var popup_interop = Object.create(dart.library);
  var marker_interop = Object.create(dart.library);
  var map_interop = Object.create(dart.library);
  var dblclick_zoom_interop = Object.create(dart.library);
  var events_interop = Object.create(dart.library);
  var navigation_control_interop = Object.create(dart.library);
  var logo_control_interop = Object.create(dart.library);
  var geolocate_control_interop = Object.create(dart.library);
  var camera_interop = Object.create(dart.library);
  var style_interop = Object.create(dart.library);
  var style_image_interop = Object.create(dart.library);
  var geojson_source_interop = Object.create(dart.library);
  var symbol_layer_interop = Object.create(dart.library);
  var line_layer_interop = Object.create(dart.library);
  var circle_layer_interop = Object.create(dart.library);
  var lng_lat_interop = Object.create(dart.library);
  var lng_lat_bounds_interop = Object.create(dart.library);
  var interop = Object.create(dart.library);
  var geojson = Object.create(dart.library);
  var mapbox_gl_dart = Object.create(dart.library);
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $_set = dartx._set;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    dynamicToFeature: () => (T.dynamicToFeature = dart.constFn(dart.fnType(geojson.Feature, [dart.dynamic])))(),
    dynamicTodynamic: () => (T.dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))(),
    ListOfFeatureJsImplN: () => (T.ListOfFeatureJsImplN = dart.constFn(core.List$(dart.nullable(dart.anonymousJSType("FeatureJsImpl")))))(),
    ListNOfFeatureJsImplN: () => (T.ListNOfFeatureJsImplN = dart.constFn(dart.nullable(T.ListOfFeatureJsImplN())))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    EventTodynamic: () => (T.EventTodynamic = dart.constFn(dart.fnType(dart.dynamic, [evented.Event])))(),
    EventJsImplToNull: () => (T.EventJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.anonymousJSType("EventJsImpl")])))(),
    EventJsImplTodynamic: () => (T.EventJsImplTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.anonymousJSType("EventJsImpl")])))(),
    PointJsImplToPoint: () => (T.PointJsImplToPoint = dart.constFn(dart.fnType(point.Point, [dart.anonymousJSType("PointJsImpl")])))(),
    dynamicToLngLat: () => (T.dynamicToLngLat = dart.constFn(dart.fnType(lng_lat.LngLat, [dart.dynamic])))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    MapOfString$dynamic: () => (T.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    FeatureJsImplToFeature: () => (T.FeatureJsImplToFeature = dart.constFn(dart.fnType(geojson.Feature, [dart.anonymousJSType("FeatureJsImpl")])))(),
    FeatureToFeatureJsImpl: () => (T.FeatureToFeatureJsImpl = dart.constFn(dart.fnType(dart.anonymousJSType("FeatureJsImpl"), [geojson.Feature])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "package:mapbox_gl_dart/src/util/evented.dart",
    "package:mapbox_gl_dart/src/ui/popup.dart",
    "package:mapbox_gl_dart/src/ui/marker.dart",
    "package:mapbox_gl_dart/src/ui/camera.dart",
    "package:mapbox_gl_dart/src/ui/map.dart",
    "package:mapbox_gl_dart/src/ui/handler/touch_zoom_rotate.dart",
    "package:mapbox_gl_dart/src/ui/handler/scroll_zoom.dart",
    "package:mapbox_gl_dart/src/ui/handler/keyboard.dart",
    "package:mapbox_gl_dart/src/ui/handler/drag_rotate.dart",
    "package:mapbox_gl_dart/src/ui/handler/drag_pan.dart",
    "package:mapbox_gl_dart/src/ui/handler/dblclick_zoom.dart",
    "package:mapbox_gl_dart/src/ui/handler/box_zoom.dart",
    "package:mapbox_gl_dart/src/ui/events.dart",
    "package:mapbox_gl_dart/src/ui/control/navigation_control.dart",
    "package:mapbox_gl_dart/src/ui/control/logo_control.dart",
    "package:mapbox_gl_dart/src/ui/control/geolocate_control.dart",
    "package:mapbox_gl_dart/src/style/style_image.dart",
    "package:mapbox_gl_dart/src/style/style.dart",
    "package:mapbox_gl_dart/src/style/sources/vector_source.dart",
    "package:mapbox_gl_dart/src/style/sources/geojson_source.dart",
    "package:mapbox_gl_dart/src/style/layers/symbol_layer.dart",
    "package:mapbox_gl_dart/src/style/layers/line_layer.dart",
    "package:mapbox_gl_dart/src/style/layers/circle_layer.dart",
    "package:mapbox_gl_dart/src/style/evaluation_parameters.dart",
    "package:mapbox_gl_dart/src/geo/point.dart",
    "package:mapbox_gl_dart/src/geo/lng_lat_bounds.dart",
    "package:mapbox_gl_dart/src/geo/lng_lat.dart",
    "package:mapbox_gl_dart/src/interop/style/layers/symbol_layer_interop.dart",
    "package:mapbox_gl_dart/src/interop/style/layers/line_layer_interop.dart",
    "package:mapbox_gl_dart/src/interop/style/layers/circle_layer_interop.dart",
    "package:mapbox_gl_dart/src/geo/geojson.dart"
  ];
  evented.Event = class Event extends js$.JsObjectWrapper$(dart.anonymousJSType("EventJsImpl")) {
    get id() {
      return this.jsObject.id;
    }
    get type() {
      return this.jsObject.type;
    }
    get lngLat() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.lngLat);
    }
    get features() {
      return this.jsObject.features[$map](geojson.Feature, dart.fn(f => new geojson.Feature.fromJsObject(dart.anonymousJSType("FeatureJsImpl").as(f)), T.dynamicToFeature()))[$toList]();
    }
    get point() {
      return new point.Point.fromJsObject(this.jsObject.point);
    }
    static new(opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let lngLat = opts && 'lngLat' in opts ? opts.lngLat : null;
      let features = opts && 'features' in opts ? opts.features : null;
      let point = opts && 'point' in opts ? opts.point : null;
      return new evented.Event.fromJsObject({id: id, type: type, lngLat: lngLat.jsObject, features: T.ListNOfFeatureJsImplN().as(features[$map](dart.dynamic, dart.fn(f => dart.dload(f, 'jsObject'), T.dynamicTodynamic()))[$toList]()), point: point.jsObject});
    }
    preventDefault() {
      return this.jsObject.preventDefault();
    }
  };
  (evented.Event.fromJsObject = function(jsObject) {
    evented.Event.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = evented.Event.prototype;
  dart.addTypeTests(evented.Event);
  dart.addTypeCaches(evented.Event);
  dart.setMethodSignature(evented.Event, () => ({
    __proto__: dart.getMethods(evented.Event.__proto__),
    preventDefault: dart.fnType(dart.dynamic, [])
  }));
  dart.setGetterSignature(evented.Event, () => ({
    __proto__: dart.getGetters(evented.Event.__proto__),
    id: core.String,
    type: core.String,
    lngLat: lng_lat.LngLat,
    features: core.List$(geojson.Feature),
    point: point.Point
  }));
  dart.setLibraryUri(evented.Event, I[0]);
  evented.Evented = class Evented extends js$.JsObjectWrapper$(dart.lazyJSType(() => dart.global.mapboxgl.Evented, "mapboxgl.Evented")) {
    on(type, layerIdOrListener = null, listener = null) {
      if (geolocate_control.GeolocateControl.is(this) && T.dynamicTodynamic().is(layerIdOrListener)) {
        return new map.MapboxMap.fromJsObject(this.jsObject.on(type, js.allowInterop(T.dynamicToNull(), dart.fn(position => {
          layerIdOrListener(position);
        }, T.dynamicToNull()))));
      }
      if (T.EventTodynamic().is(layerIdOrListener)) {
        return new map.MapboxMap.fromJsObject(this.jsObject.on(type, js.allowInterop(T.EventJsImplToNull(), dart.fn(object => {
          layerIdOrListener(new evented.Event.fromJsObject(object));
        }, T.EventJsImplToNull()))));
      }
      return new map.MapboxMap.fromJsObject(this.jsObject.on(type, layerIdOrListener, js.allowInterop(T.EventJsImplTodynamic(), dart.fn(object => {
        dart.nullCheck(listener)(new evented.Event.fromJsObject(object));
      }, T.EventJsImplToNull()))));
    }
    off(type, layerIdOrListener = null, listener = null) {
      if (T.EventTodynamic().is(layerIdOrListener)) {
        return new map.MapboxMap.fromJsObject(this.jsObject.off(type, js.allowInterop(T.EventJsImplToNull(), dart.fn(object => {
          layerIdOrListener(new evented.Event.fromJsObject(object));
        }, T.EventJsImplToNull()))));
      }
      return new map.MapboxMap.fromJsObject(this.jsObject.off(type, layerIdOrListener, js.allowInterop(T.EventJsImplTodynamic(), dart.fn(object => {
        dart.nullCheck(listener)(new evented.Event.fromJsObject(object));
      }, T.EventJsImplToNull()))));
    }
    once(type, listener) {
      return new map.MapboxMap.fromJsObject(this.jsObject.once(type, js.allowInterop(T.EventJsImplTodynamic(), dart.fn(object => {
        listener(new evented.Event.fromJsObject(object));
      }, T.EventJsImplToNull()))));
    }
    fire(event, properties = null) {
      return this.jsObject.fire(event.jsObject, properties);
    }
    listens(type) {
      return this.jsObject.listens(type);
    }
    setEventedParent(parent = null, data = null) {
      let t0;
      return this.jsObject.setEventedParent((t0 = parent, t0 == null ? null : t0.jsObject), data);
    }
  };
  (evented.Evented.fromJsObject = function(jsObject) {
    evented.Evented.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = evented.Evented.prototype;
  dart.addTypeTests(evented.Evented);
  dart.addTypeCaches(evented.Evented);
  dart.setMethodSignature(evented.Evented, () => ({
    __proto__: dart.getMethods(evented.Evented.__proto__),
    on: dart.fnType(map.MapboxMap, [core.String], [dart.dynamic, dart.nullable(dart.fnType(dart.dynamic, [evented.Event]))]),
    off: dart.fnType(map.MapboxMap, [core.String], [dart.dynamic, dart.nullable(dart.fnType(dart.dynamic, [evented.Event]))]),
    once: dart.fnType(map.MapboxMap, [core.String, dart.fnType(dart.dynamic, [evented.Event])]),
    fire: dart.fnType(dart.dynamic, [evented.Event], [dart.dynamic]),
    listens: dart.fnType(dart.dynamic, [core.String]),
    setEventedParent: dart.fnType(dart.dynamic, [], [dart.nullable(evented.Evented), dart.dynamic])
  }));
  dart.setLibraryUri(evented.Evented, I[0]);
  var jsObject$ = dart.privateName(popup, "Popup.jsObject");
  popup.Popup = class Popup extends evented.Evented {
    get jsObject() {
      return this[jsObject$];
    }
    set jsObject(value) {
      super.jsObject = value;
    }
    get options() {
      return this.jsObject.options;
    }
    static new(options = null) {
      if (options != null) {
        return new popup.Popup.fromJsObject(new dart.global.mapboxgl.Popup(options.jsObject));
      }
      return new popup.Popup.fromJsObject(new dart.global.mapboxgl.Popup());
    }
    addTo(map) {
      return new popup.Popup.fromJsObject(this.jsObject.addTo(map.jsObject));
    }
    isOpen() {
      return this.jsObject.isOpen();
    }
    remove() {
      return new popup.Popup.fromJsObject(this.jsObject.remove());
    }
    getLngLat() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.getLngLat());
    }
    setLngLat(lnglat) {
      return new popup.Popup.fromJsObject(this.jsObject.setLngLat(lnglat.jsObject));
    }
    trackPointer() {
      return new popup.Popup.fromJsObject(this.jsObject.trackPointer());
    }
    getElement() {
      return this.jsObject.getElement();
    }
    setText(text) {
      return new popup.Popup.fromJsObject(this.jsObject.setText(text));
    }
    setHTML(html) {
      return new popup.Popup.fromJsObject(this.jsObject.setHTML(html));
    }
    getMaxWidth() {
      return this.jsObject.getMaxWidth();
    }
    setMaxWidth(maxWidth) {
      return new popup.Popup.fromJsObject(this.jsObject.setMaxWidth(maxWidth));
    }
    setDOMContent(htmlNode) {
      return new popup.Popup.fromJsObject(this.jsObject.setDOMContent(htmlNode));
    }
    addClassName(className) {
      return this.jsObject.addClassName(className);
    }
    removeClassName(className) {
      return this.jsObject.removeClassName(className);
    }
    toggleClassName(className) {
      return this.jsObject.toggleClassName(className);
    }
  };
  (popup.Popup.fromJsObject = function(jsObject) {
    this[jsObject$] = jsObject;
    popup.Popup.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = popup.Popup.prototype;
  dart.addTypeTests(popup.Popup);
  dart.addTypeCaches(popup.Popup);
  dart.setMethodSignature(popup.Popup, () => ({
    __proto__: dart.getMethods(popup.Popup.__proto__),
    addTo: dart.fnType(popup.Popup, [map.MapboxMap]),
    isOpen: dart.fnType(core.bool, []),
    remove: dart.fnType(popup.Popup, []),
    getLngLat: dart.fnType(lng_lat.LngLat, []),
    setLngLat: dart.fnType(popup.Popup, [lng_lat.LngLat]),
    trackPointer: dart.fnType(popup.Popup, []),
    getElement: dart.fnType(html.HtmlElement, []),
    setText: dart.fnType(popup.Popup, [core.String]),
    setHTML: dart.fnType(popup.Popup, [dart.nullable(core.String)]),
    getMaxWidth: dart.fnType(core.String, []),
    setMaxWidth: dart.fnType(popup.Popup, [core.String]),
    setDOMContent: dart.fnType(popup.Popup, [html.Node]),
    addClassName: dart.fnType(dart.dynamic, [core.String]),
    removeClassName: dart.fnType(dart.dynamic, [core.String]),
    toggleClassName: dart.fnType(core.bool, [core.String])
  }));
  dart.setGetterSignature(popup.Popup, () => ({
    __proto__: dart.getGetters(popup.Popup.__proto__),
    options: dart.dynamic
  }));
  dart.setLibraryUri(popup.Popup, I[1]);
  dart.setFieldSignature(popup.Popup, () => ({
    __proto__: dart.getFields(popup.Popup.__proto__),
    jsObject: dart.finalFieldType(dart.lazyJSType(() => dart.global.mapboxgl.Popup, "mapboxgl.Popup"))
  }));
  popup.PopupOptions = class PopupOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("PopupOptionsJsImpl")) {
    static new(opts) {
      let loseButton = opts && 'loseButton' in opts ? opts.loseButton : null;
      let closeButton = opts && 'closeButton' in opts ? opts.closeButton : null;
      let closeOnClick = opts && 'closeOnClick' in opts ? opts.closeOnClick : null;
      let anchor = opts && 'anchor' in opts ? opts.anchor : null;
      let offset = opts && 'offset' in opts ? opts.offset : null;
      let className = opts && 'className' in opts ? opts.className : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      return new popup.PopupOptions.fromJsObject({loseButton: loseButton, closeButton: closeButton, closeOnClick: closeOnClick, anchor: anchor, offset: offset, className: className, maxWidth: maxWidth});
    }
  };
  (popup.PopupOptions.fromJsObject = function(jsObject) {
    popup.PopupOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = popup.PopupOptions.prototype;
  dart.addTypeTests(popup.PopupOptions);
  dart.addTypeCaches(popup.PopupOptions);
  dart.setLibraryUri(popup.PopupOptions, I[1]);
  var jsObject$0 = dart.privateName(marker, "Marker.jsObject");
  marker.Marker = class Marker extends evented.Evented {
    get jsObject() {
      return this[jsObject$0];
    }
    set jsObject(value) {
      super.jsObject = value;
    }
    static new(options = null) {
      let t0;
      return new marker.Marker.fromJsObject(new dart.global.mapboxgl.Marker((t0 = options, t0 == null ? null : t0.jsObject)));
    }
    addTo(map) {
      return new marker.Marker.fromJsObject(this.jsObject.addTo(map.jsObject));
    }
    remove() {
      return new marker.Marker.fromJsObject(this.jsObject.remove());
    }
    getLngLat() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.getLngLat());
    }
    setLngLat(lnglat) {
      return new marker.Marker.fromJsObject(this.jsObject.setLngLat(lnglat.jsObject));
    }
    getElement() {
      return this.jsObject.getElement();
    }
    setPopup(popup) {
      return new marker.Marker.fromJsObject(this.jsObject.setPopup(popup.jsObject));
    }
    getPopup() {
      return new popup.Popup.fromJsObject(this.jsObject.getPopup());
    }
    togglePopup() {
      return new marker.Marker.fromJsObject(this.jsObject.togglePopup());
    }
    getOffset() {
      return new point.Point.fromJsObject(this.jsObject.getOffset());
    }
    setOffset(offset) {
      return new marker.Marker.fromJsObject(this.jsObject.setOffset(offset.jsObject));
    }
    setDraggable(shouldBeDraggable) {
      return new marker.Marker.fromJsObject(this.jsObject.setDraggable(shouldBeDraggable));
    }
    isDraggable() {
      return this.jsObject.isDraggable();
    }
    setRotation(rotation) {
      return new marker.Marker.fromJsObject(this.jsObject.setRotation(rotation));
    }
    getRotation() {
      return this.jsObject.getRotation();
    }
    setRotationAlignment(alignment) {
      return new marker.Marker.fromJsObject(this.jsObject.setRotationAlignment(alignment));
    }
    getRotationAlignment() {
      return this.jsObject.getRotationAlignment();
    }
    setPitchAlignment(alignment) {
      return new marker.Marker.fromJsObject(this.jsObject.setPitchAlignment(alignment));
    }
    getPitchAlignment() {
      return this.jsObject.getPitchAlignment();
    }
  };
  (marker.Marker.fromJsObject = function(jsObject) {
    this[jsObject$0] = jsObject;
    marker.Marker.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = marker.Marker.prototype;
  dart.addTypeTests(marker.Marker);
  dart.addTypeCaches(marker.Marker);
  dart.setMethodSignature(marker.Marker, () => ({
    __proto__: dart.getMethods(marker.Marker.__proto__),
    addTo: dart.fnType(marker.Marker, [map.MapboxMap]),
    remove: dart.fnType(marker.Marker, []),
    getLngLat: dart.fnType(lng_lat.LngLat, []),
    setLngLat: dart.fnType(marker.Marker, [lng_lat.LngLat]),
    getElement: dart.fnType(html.HtmlElement, []),
    setPopup: dart.fnType(marker.Marker, [popup.Popup]),
    getPopup: dart.fnType(popup.Popup, []),
    togglePopup: dart.fnType(marker.Marker, []),
    getOffset: dart.fnType(point.Point, []),
    setOffset: dart.fnType(marker.Marker, [point.Point]),
    setDraggable: dart.fnType(marker.Marker, [core.bool]),
    isDraggable: dart.fnType(core.bool, []),
    setRotation: dart.fnType(marker.Marker, [core.num]),
    getRotation: dart.fnType(core.num, []),
    setRotationAlignment: dart.fnType(marker.Marker, [core.String]),
    getRotationAlignment: dart.fnType(core.String, []),
    setPitchAlignment: dart.fnType(marker.Marker, [core.String]),
    getPitchAlignment: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(marker.Marker, I[2]);
  dart.setFieldSignature(marker.Marker, () => ({
    __proto__: dart.getFields(marker.Marker.__proto__),
    jsObject: dart.finalFieldType(dart.lazyJSType(() => dart.global.mapboxgl.Marker, "mapboxgl.Marker"))
  }));
  marker.MarkerOptions = class MarkerOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("MarkerOptionsJsImpl")) {
    static new(opts) {
      let t0;
      let element = opts && 'element' in opts ? opts.element : null;
      let offset = opts && 'offset' in opts ? opts.offset : null;
      let anchor = opts && 'anchor' in opts ? opts.anchor : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let draggable = opts && 'draggable' in opts ? opts.draggable : null;
      let rotation = opts && 'rotation' in opts ? opts.rotation : null;
      let rotationAlignment = opts && 'rotationAlignment' in opts ? opts.rotationAlignment : null;
      let pitchAlignment = opts && 'pitchAlignment' in opts ? opts.pitchAlignment : null;
      return new marker.MarkerOptions.fromJsObject({element: element, offset: (t0 = offset, t0 == null ? null : t0.jsObject), anchor: anchor, color: color, draggable: draggable, rotation: rotation, rotationAlignment: rotationAlignment, pitchAlignment: pitchAlignment});
    }
  };
  (marker.MarkerOptions.fromJsObject = function(jsObject) {
    marker.MarkerOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = marker.MarkerOptions.prototype;
  dart.addTypeTests(marker.MarkerOptions);
  dart.addTypeCaches(marker.MarkerOptions);
  dart.setLibraryUri(marker.MarkerOptions, I[2]);
  var jsObject$1 = dart.privateName(map, "MapboxMap.jsObject");
  var jsObject$2 = dart.privateName(camera, "Camera.jsObject");
  camera.Camera = class Camera extends evented.Evented {
    get jsObject() {
      return this[jsObject$2];
    }
    set jsObject(value) {
      super.jsObject = value;
    }
    getCenter() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.getCenter());
    }
    setCenter(center, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setCenter(center.jsObject));
    }
    panBy(offset, options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.panBy(offset.jsObject));
    }
    panTo(lnglat, options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.panTo(lnglat.jsObject));
    }
    getZoom() {
      return this.jsObject.getZoom();
    }
    setZoom(zoom, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setZoom(zoom));
    }
    zoomTo(zoom, options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.zoomTo(zoom));
    }
    zoomIn(options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.zoomIn());
    }
    zoomOut(options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.zoomOut());
    }
    getBearing() {
      return this.jsObject.getBearing();
    }
    setBearing(bearing, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setBearing(bearing));
    }
    rotateTo(bearing, options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.rotateTo(bearing));
    }
    resetNorth(options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.resetNorth());
    }
    resetNorthPitch(options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.resetNorthPitch());
    }
    snapToNorth(options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.snapToNorth());
    }
    getPitch() {
      return this.jsObject.getPitch();
    }
    setPitch(pitch, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setPitch(pitch));
    }
    cameraForBounds(bounds, options = null) {
      if (options == null) {
        return new camera.CameraOptions.fromJsObject(this.jsObject.cameraForBounds(bounds.jsObject));
      }
      return new camera.CameraOptions.fromJsObject(this.jsObject.cameraForBounds(bounds.jsObject, dart.nullable(dart.anonymousJSType("CameraOptionsJsImpl")).as(camera.CameraOptions.is(options) ? options.jsObject : js_util.jsify(core.Object.as(options)))));
    }
    fitBounds(bounds, options = null, eventData = null) {
      let t0;
      return new map.MapboxMap.fromJsObject(this.jsObject.fitBounds(bounds.jsObject, js_util.jsify((t0 = options, t0 == null ? new _js_helper.LinkedMap.new() : t0)), eventData));
    }
    fitScreenCoordinates(p0, p1, bearing, options = null, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.fitScreenCoordinates(p0.jsObject, p1.jsObject, bearing));
    }
    jumpTo(options, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.jumpTo(options.jsObject));
    }
    easeTo(options, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.easeTo(options));
    }
    flyTo(options, eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.flyTo(camera.CameraOptions.is(options) ? options.jsObject : js_util.jsify(core.Object.as(options))));
    }
    isEasing() {
      return this.jsObject.isEasing();
    }
    stop() {
      return new map.MapboxMap.fromJsObject(this.jsObject.stop());
    }
  };
  (camera.Camera.fromJsObject = function(jsObject) {
    this[jsObject$2] = jsObject;
    camera.Camera.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = camera.Camera.prototype;
  dart.addTypeTests(camera.Camera);
  dart.addTypeCaches(camera.Camera);
  dart.setMethodSignature(camera.Camera, () => ({
    __proto__: dart.getMethods(camera.Camera.__proto__),
    getCenter: dart.fnType(lng_lat.LngLat, []),
    setCenter: dart.fnType(map.MapboxMap, [lng_lat.LngLat], [dart.dynamic]),
    panBy: dart.fnType(map.MapboxMap, [point.Point], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    panTo: dart.fnType(map.MapboxMap, [lng_lat.LngLat], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    getZoom: dart.fnType(core.num, []),
    setZoom: dart.fnType(map.MapboxMap, [core.num], [dart.dynamic]),
    zoomTo: dart.fnType(map.MapboxMap, [core.num], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    zoomIn: dart.fnType(map.MapboxMap, [], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    zoomOut: dart.fnType(map.MapboxMap, [], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    getBearing: dart.fnType(core.num, []),
    setBearing: dart.fnType(map.MapboxMap, [core.num], [dart.dynamic]),
    rotateTo: dart.fnType(map.MapboxMap, [core.num], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    resetNorth: dart.fnType(map.MapboxMap, [], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    resetNorthPitch: dart.fnType(map.MapboxMap, [], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    snapToNorth: dart.fnType(map.MapboxMap, [], [dart.nullable(camera.AnimationOptions), dart.dynamic]),
    getPitch: dart.fnType(core.num, []),
    setPitch: dart.fnType(map.MapboxMap, [core.num], [dart.dynamic]),
    cameraForBounds: dart.fnType(camera.CameraOptions, [lng_lat_bounds.LngLatBounds], [dart.dynamic]),
    fitBounds: dart.fnType(map.MapboxMap, [lng_lat_bounds.LngLatBounds], [dart.nullable(core.Map$(core.String, dart.dynamic)), dart.dynamic]),
    fitScreenCoordinates: dart.fnType(map.MapboxMap, [point.Point, point.Point, core.num], [dart.dynamic, dart.dynamic]),
    jumpTo: dart.fnType(map.MapboxMap, [camera.CameraOptions], [dart.dynamic]),
    easeTo: dart.fnType(map.MapboxMap, [dart.dynamic], [dart.dynamic]),
    flyTo: dart.fnType(map.MapboxMap, [dart.dynamic], [dart.nullable(core.String)]),
    isEasing: dart.fnType(core.bool, []),
    stop: dart.fnType(map.MapboxMap, [])
  }));
  dart.setLibraryUri(camera.Camera, I[3]);
  dart.setFieldSignature(camera.Camera, () => ({
    __proto__: dart.getFields(camera.Camera.__proto__),
    jsObject: dart.finalFieldType(dart.lazyJSType(() => dart.global.mapboxgl.Camera, "mapboxgl.Camera"))
  }));
  map.MapboxMap = class MapboxMap extends camera.Camera {
    get jsObject() {
      return this[jsObject$1];
    }
    set jsObject(value) {
      super.jsObject = value;
    }
    static new(options) {
      return new map.MapboxMap.fromJsObject(new dart.global.mapboxgl.Map(options.jsObject));
    }
    get style() {
      return new style.Style.fromJsObject(this.jsObject.style);
    }
    get painter() {
      return this.jsObject.painter;
    }
    get scrollZoom() {
      return new scroll_zoom.ScrollZoomHandler.fromJsObject(this.jsObject.scrollZoom);
    }
    get boxZoom() {
      return new box_zoom.BoxZoomHandler.fromJsObject(this.jsObject.boxZoom);
    }
    get dragRotate() {
      return new drag_rotate.DragRotateHandler.fromJsObject(this.jsObject.dragRotate);
    }
    get dragPan() {
      return new drag_pan.DragPanHandler.fromJsObject(this.jsObject.dragPan);
    }
    get keyboard() {
      return new keyboard.KeyboardHandler.fromJsObject(this.jsObject.keyboard);
    }
    get doubleClickZoom() {
      return new dblclick_zoom.DoubleClickZoomHandler.fromJsObject(this.jsObject.doubleClickZoom);
    }
    get touchZoomRotate() {
      return new touch_zoom_rotate.TouchZoomRotateHandler.fromJsObject(this.jsObject.touchZoomRotate);
    }
    addControl(control, position = null) {
      if (position != null) {
        return new map.MapboxMap.fromJsObject(this.jsObject.addControl(dart.nullable(dart.anonymousJSType("IControlJsImpl")).as(dart.dload(control, 'jsObject')), position));
      }
      return new map.MapboxMap.fromJsObject(this.jsObject.addControl(dart.nullable(dart.anonymousJSType("IControlJsImpl")).as(dart.dload(control, 'jsObject'))));
    }
    removeControl(control) {
      return new map.MapboxMap.fromJsObject(this.jsObject.removeControl(dart.nullable(dart.anonymousJSType("IControlJsImpl")).as(dart.dload(control, 'jsObject'))));
    }
    resize(eventData = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.resize());
    }
    getBounds() {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(this.jsObject.getBounds());
    }
    getMaxBounds() {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(this.jsObject.getMaxBounds());
    }
    setMaxBounds(bounds) {
      let t0;
      return new map.MapboxMap.fromJsObject(this.jsObject.setMaxBounds((t0 = bounds, t0 == null ? null : t0.jsObject)));
    }
    setMinZoom(minZoom = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setMinZoom(minZoom));
    }
    getMinZoom() {
      return this.jsObject.getMinZoom();
    }
    setMaxZoom(maxZoom = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setMaxZoom(maxZoom));
    }
    getMaxZoom() {
      return this.jsObject.getMaxZoom();
    }
    setMinPitch(minPitch = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setMinPitch());
    }
    getMinPitch() {
      return this.jsObject.getMinPitch();
    }
    setMaxPitch(maxPitch = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setMaxPitch());
    }
    getMaxPitch() {
      return this.jsObject.getMaxPitch();
    }
    getRenderWorldCopies() {
      return this.jsObject.getRenderWorldCopies();
    }
    setRenderWorldCopies(renderWorldCopies = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setRenderWorldCopies(renderWorldCopies));
    }
    project(lnglat) {
      return new point.Point.fromJsObject(this.jsObject.project(lnglat.jsObject));
    }
    unproject(point) {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.unproject(point.jsObject));
    }
    isMoving() {
      return this.jsObject.isMoving();
    }
    isZooming() {
      return this.jsObject.isZooming();
    }
    isRotating() {
      return this.jsObject.isRotating();
    }
    queryRenderedFeatures(geometry, options = null) {
      if (options == null) {
        return this.jsObject.queryRenderedFeatures(geometry)[$map](geojson.Feature, dart.fn(f => new geojson.Feature.fromJsObject(dart.anonymousJSType("FeatureJsImpl").as(f)), T.dynamicToFeature()))[$toList]();
      }
      return this.jsObject.queryRenderedFeatures(geometry, js_util.jsify(options))[$map](geojson.Feature, dart.fn(f => new geojson.Feature.fromJsObject(dart.anonymousJSType("FeatureJsImpl").as(f)), T.dynamicToFeature()))[$toList]();
    }
    querySourceFeatures(sourceId, parameters) {
      return this.jsObject.querySourceFeatures(sourceId, parameters);
    }
    setStyle(style, options = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setStyle(style));
    }
    getStyle() {
      return this.jsObject.getStyle();
    }
    isStyleLoaded() {
      return this.jsObject.isStyleLoaded();
    }
    addSource(id, source) {
      if (source$.Source.is(source)) {
        return new map.MapboxMap.fromJsObject(this.jsObject.addSource(id, source.jsObject));
      }
      return new map.MapboxMap.fromJsObject(this.jsObject.addSource(id, js_util.jsify(core.Object.as(source))));
    }
    isSourceLoaded(id) {
      return this.jsObject.isSourceLoaded(id);
    }
    areTilesLoaded() {
      return this.jsObject.areTilesLoaded();
    }
    addSourceType(name, sourceType, callback) {
      return this.jsObject.addSourceType(name, sourceType, dart.assertInterop(callback));
    }
    removeSource(id) {
      return this.jsObject.removeSource(id);
    }
    getSource(id) {
      let source = this.jsObject.getSource(id);
      if (dart.anonymousJSType("GeoJsonSourceJsImpl").is(source)) {
        return new geojson_source.GeoJsonSource.fromJsObject(source);
      }
      if (dart.anonymousJSType("VectorSourceJsImpl").is(source)) {
        return new vector_source.VectorSource.fromJsObject(source);
      }
      return source;
    }
    addImage(id, image, options = null) {
      if (core.Map.is(image)) {
        image = js_util.jsify(image);
      }
      return options == null ? this.jsObject.addImage(id, image) : this.jsObject.addImage(id, image, js_util.jsify(options));
    }
    updateImage(id, image) {
      return this.jsObject.updateImage(id, image);
    }
    hasImage(id) {
      return this.jsObject.hasImage(id);
    }
    removeImage(id) {
      return this.jsObject.removeImage(id);
    }
    loadImage(url, callback) {
      return this.jsObject.loadImage(url, js.allowInterop(core.Function, callback));
    }
    listImages() {
      return this.jsObject.listImages();
    }
    addLayer(layer, beforeId = null) {
      if (layer$.Layer.is(layer)) {
        return new map.MapboxMap.fromJsObject(this.jsObject.addLayer(layer.jsObject));
      }
      return new map.MapboxMap.fromJsObject(this.jsObject.addLayer(js_util.jsify(core.Object.as(layer))));
    }
    moveLayer(id, beforeId) {
      return new map.MapboxMap.fromJsObject(this.jsObject.moveLayer(id, beforeId));
    }
    removeLayer(id) {
      return this.jsObject.removeLayer(id);
    }
    getLayer(id) {
      return this.jsObject.getLayer(id);
    }
    setLayerZoomRange(layerId, minzoom, maxzoom) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setLayerZoomRange(layerId, minzoom, maxzoom));
    }
    setFilter(layerId, filter, options = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setFilter(layerId, filter));
    }
    getFilter(layerId) {
      return this.jsObject.getFilter(layerId);
    }
    setPaintProperty(layerId, name, value, options = null) {
      return this.jsObject.setPaintProperty(layerId, name, js_util.jsify(core.Object.as(value)));
    }
    getPaintProperty(layerId, name) {
      return this.jsObject.getPaintProperty(layerId, name);
    }
    setLayoutProperty(layerId, name, value, options = null) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setLayoutProperty(layerId, name, value));
    }
    getLayoutProperty(layerId, name) {
      return this.jsObject.getLayoutProperty(layerId, name);
    }
    setLight(light, options) {
      return new map.MapboxMap.fromJsObject(this.jsObject.setLight(light, options.jsObject));
    }
    getLight() {
      return this.jsObject.getLight();
    }
    setFeatureState(feature, state) {
      return this.jsObject.setFeatureState(feature, state);
    }
    removeFeatureState(target, key = null) {
      return this.jsObject.removeFeatureState(target);
    }
    getFeatureState(feature) {
      return this.jsObject.getFeatureState(feature);
    }
    getContainer() {
      return this.jsObject.getContainer();
    }
    getCanvasContainer() {
      return this.jsObject.getCanvasContainer();
    }
    getCanvas() {
      return this.jsObject.getCanvas();
    }
    loaded() {
      return this.jsObject.loaded();
    }
    remove() {
      return this.jsObject.remove();
    }
    triggerRepaint() {
      return this.jsObject.triggerRepaint();
    }
    get showTileBoundaries() {
      return this.jsObject.showTileBoundaries;
    }
    set showTileBoundaries(value) {
      return this.jsObject.showTileBoundaries;
    }
    get showCollisionBoxes() {
      return this.jsObject.showCollisionBoxes;
    }
    set showCollisionBoxes(value) {
      return this.jsObject.showCollisionBoxes;
    }
    get showOverdrawInspector() {
      return this.jsObject.showOverdrawInspector;
    }
    set showOverdrawInspector(value) {
      return this.jsObject.showOverdrawInspector;
    }
    get repaint() {
      return this.jsObject.repaint;
    }
    set repaint(value) {
      return this.jsObject.repaint;
    }
    get vertices() {
      return this.jsObject.vertices;
    }
    set vertices(value) {
      return this.jsObject.vertices;
    }
    get version() {
      return this.jsObject.version;
    }
  };
  (map.MapboxMap.fromJsObject = function(jsObject) {
    this[jsObject$1] = jsObject;
    map.MapboxMap.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = map.MapboxMap.prototype;
  dart.addTypeTests(map.MapboxMap);
  dart.addTypeCaches(map.MapboxMap);
  dart.setMethodSignature(map.MapboxMap, () => ({
    __proto__: dart.getMethods(map.MapboxMap.__proto__),
    addControl: dart.fnType(map.MapboxMap, [dart.dynamic], [dart.nullable(core.String)]),
    removeControl: dart.fnType(map.MapboxMap, [dart.dynamic]),
    resize: dart.fnType(map.MapboxMap, [], [dart.dynamic]),
    getBounds: dart.fnType(lng_lat_bounds.LngLatBounds, []),
    getMaxBounds: dart.fnType(lng_lat_bounds.LngLatBounds, []),
    setMaxBounds: dart.fnType(map.MapboxMap, [dart.nullable(lng_lat_bounds.LngLatBounds)]),
    setMinZoom: dart.fnType(map.MapboxMap, [], [dart.nullable(core.num)]),
    getMinZoom: dart.fnType(core.num, []),
    setMaxZoom: dart.fnType(map.MapboxMap, [], [dart.nullable(core.num)]),
    getMaxZoom: dart.fnType(core.num, []),
    setMinPitch: dart.fnType(map.MapboxMap, [], [dart.nullable(core.num)]),
    getMinPitch: dart.fnType(core.num, []),
    setMaxPitch: dart.fnType(map.MapboxMap, [], [dart.nullable(core.num)]),
    getMaxPitch: dart.fnType(core.num, []),
    getRenderWorldCopies: dart.fnType(core.bool, []),
    setRenderWorldCopies: dart.fnType(map.MapboxMap, [], [dart.nullable(core.bool)]),
    project: dart.fnType(point.Point, [lng_lat.LngLat]),
    unproject: dart.fnType(lng_lat.LngLat, [point.Point]),
    isMoving: dart.fnType(core.bool, []),
    isZooming: dart.fnType(core.bool, []),
    isRotating: dart.fnType(core.bool, []),
    queryRenderedFeatures: dart.fnType(core.List$(geojson.Feature), [dart.dynamic], [dart.nullable(core.Map$(core.String, dart.dynamic))]),
    querySourceFeatures: dart.fnType(core.List, [core.String, dart.dynamic]),
    setStyle: dart.fnType(map.MapboxMap, [dart.dynamic], [dart.dynamic]),
    getStyle: dart.fnType(dart.dynamic, []),
    isStyleLoaded: dart.fnType(core.bool, []),
    addSource: dart.fnType(map.MapboxMap, [core.String, dart.dynamic]),
    isSourceLoaded: dart.fnType(core.bool, [core.String]),
    areTilesLoaded: dart.fnType(core.bool, []),
    addSourceType: dart.fnType(dart.dynamic, [core.String, dart.dynamic, core.Function]),
    removeSource: dart.fnType(dart.dynamic, [core.String]),
    getSource: dart.fnType(dart.dynamic, [core.String]),
    addImage: dart.fnType(dart.dynamic, [core.String, dart.dynamic], [dart.nullable(core.Map$(core.String, dart.dynamic))]),
    updateImage: dart.fnType(dart.dynamic, [core.String, dart.dynamic]),
    hasImage: dart.fnType(core.bool, [core.String]),
    removeImage: dart.fnType(dart.dynamic, [core.String]),
    loadImage: dart.fnType(dart.dynamic, [core.String, core.Function]),
    listImages: dart.fnType(core.List$(core.String), []),
    addLayer: dart.fnType(map.MapboxMap, [dart.dynamic], [dart.nullable(core.String)]),
    moveLayer: dart.fnType(map.MapboxMap, [core.String, core.String]),
    removeLayer: dart.fnType(dart.dynamic, [core.String]),
    getLayer: dart.fnType(dart.dynamic, [core.String]),
    setLayerZoomRange: dart.fnType(map.MapboxMap, [core.String, core.num, core.num]),
    setFilter: dart.fnType(map.MapboxMap, [core.String, dart.dynamic], [dart.nullable(style.StyleSetterOptions)]),
    getFilter: dart.fnType(core.List, [core.String]),
    setPaintProperty: dart.fnType(dart.dynamic, [core.String, core.String, dart.dynamic], [dart.nullable(style.StyleSetterOptions)]),
    getPaintProperty: dart.fnType(dart.dynamic, [core.String, core.String]),
    setLayoutProperty: dart.fnType(map.MapboxMap, [core.String, core.String, dart.dynamic], [dart.nullable(style.StyleSetterOptions)]),
    getLayoutProperty: dart.fnType(dart.dynamic, [core.String, core.String]),
    setLight: dart.fnType(map.MapboxMap, [dart.dynamic, style.StyleSetterOptions]),
    getLight: dart.fnType(dart.dynamic, []),
    setFeatureState: dart.fnType(dart.dynamic, [dart.dynamic, dart.dynamic]),
    removeFeatureState: dart.fnType(dart.dynamic, [dart.dynamic], [dart.nullable(core.String)]),
    getFeatureState: dart.fnType(dart.dynamic, [dart.dynamic]),
    getContainer: dart.fnType(html.HtmlElement, []),
    getCanvasContainer: dart.fnType(html.HtmlElement, []),
    getCanvas: dart.fnType(html.CanvasElement, []),
    loaded: dart.fnType(core.bool, []),
    remove: dart.fnType(dart.dynamic, []),
    triggerRepaint: dart.fnType(dart.dynamic, [])
  }));
  dart.setGetterSignature(map.MapboxMap, () => ({
    __proto__: dart.getGetters(map.MapboxMap.__proto__),
    style: style.Style,
    painter: dart.dynamic,
    scrollZoom: scroll_zoom.ScrollZoomHandler,
    boxZoom: box_zoom.BoxZoomHandler,
    dragRotate: drag_rotate.DragRotateHandler,
    dragPan: drag_pan.DragPanHandler,
    keyboard: keyboard.KeyboardHandler,
    doubleClickZoom: dblclick_zoom.DoubleClickZoomHandler,
    touchZoomRotate: touch_zoom_rotate.TouchZoomRotateHandler,
    showTileBoundaries: core.bool,
    showCollisionBoxes: core.bool,
    showOverdrawInspector: core.bool,
    repaint: core.bool,
    vertices: core.bool,
    version: core.String
  }));
  dart.setSetterSignature(map.MapboxMap, () => ({
    __proto__: dart.getSetters(map.MapboxMap.__proto__),
    showTileBoundaries: core.bool,
    showCollisionBoxes: core.bool,
    showOverdrawInspector: core.bool,
    repaint: core.bool,
    vertices: core.bool
  }));
  dart.setLibraryUri(map.MapboxMap, I[4]);
  dart.setFieldSignature(map.MapboxMap, () => ({
    __proto__: dart.getFields(map.MapboxMap.__proto__),
    jsObject: dart.finalFieldType(dart.lazyJSType(() => dart.global.mapboxgl.Map, "mapboxgl.Map"))
  }));
  map.MapOptions = class MapOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("MapOptionsJsImpl")) {
    get hash() {
      return this.jsObject.hash;
    }
    get interactive() {
      return this.jsObject.interactive;
    }
    get container() {
      return this.jsObject.container;
    }
    get bearingSnap() {
      return this.jsObject.bearingSnap;
    }
    get pitchWithRotate() {
      return this.jsObject.pitchWithRotate;
    }
    get clickTolerance() {
      return this.jsObject.clickTolerance;
    }
    get attributionControl() {
      return this.jsObject.attributionControl;
    }
    get customAttribution() {
      return this.jsObject.customAttribution;
    }
    get logoPosition() {
      return this.jsObject.logoPosition;
    }
    get failIfMajorPerformanceCaveat() {
      return this.jsObject.failIfMajorPerformanceCaveat;
    }
    get preserveDrawingBuffer() {
      return this.jsObject.preserveDrawingBuffer;
    }
    get antialias() {
      return this.jsObject.antialias;
    }
    get refreshExpiredTiles() {
      return this.jsObject.refreshExpiredTiles;
    }
    get maxBounds() {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(this.jsObject.maxBounds);
    }
    get scrollZoom() {
      return this.jsObject.scrollZoom;
    }
    get minZoom() {
      return this.jsObject.minZoom;
    }
    get maxZoom() {
      return this.jsObject.maxZoom;
    }
    get minPitch() {
      return this.jsObject.minPitch;
    }
    get maxPitch() {
      return this.jsObject.maxPitch;
    }
    get style() {
      return this.jsObject.style;
    }
    get boxZoom() {
      return this.jsObject.boxZoom;
    }
    get dragRotate() {
      return this.jsObject.dragRotate;
    }
    get dragPan() {
      return this.jsObject.dragPan;
    }
    get keyboard() {
      return this.jsObject.keyboard;
    }
    get doubleClickZoom() {
      return this.jsObject.doubleClickZoom;
    }
    get touchZoomRotate() {
      return this.jsObject.touchZoomRotate;
    }
    get trackResize() {
      return this.jsObject.trackResize;
    }
    get center() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.center);
    }
    get zoom() {
      return this.jsObject.zoom;
    }
    get bearing() {
      return this.jsObject.bearing;
    }
    get pitch() {
      return this.jsObject.pitch;
    }
    get bounds() {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(this.jsObject.bounds);
    }
    get fitBoundsOptions() {
      return this.jsObject.fitBoundsOptions;
    }
    get renderWorldCopies() {
      return this.jsObject.renderWorldCopies;
    }
    get maxTileCacheSize() {
      return this.jsObject.maxTileCacheSize;
    }
    get localIdeographFontFamily() {
      return this.jsObject.localIdeographFontFamily;
    }
    get transformRequest() {
      return this.jsObject.transformRequest;
    }
    get collectResourceTiming() {
      return this.jsObject.collectResourceTiming;
    }
    get fadeDuration() {
      return this.jsObject.fadeDuration;
    }
    get crossSourceCollisions() {
      return this.jsObject.crossSourceCollisions;
    }
    get accessToken() {
      return this.jsObject.accessToken;
    }
    get locale() {
      return this.jsObject.locale;
    }
    static new(opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7, t0$8, t0$9, t0$10, t0$11;
      let hash = opts && 'hash' in opts ? opts.hash : null;
      let interactive = opts && 'interactive' in opts ? opts.interactive : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let bearingSnap = opts && 'bearingSnap' in opts ? opts.bearingSnap : null;
      let pitchWithRotate = opts && 'pitchWithRotate' in opts ? opts.pitchWithRotate : null;
      let clickTolerance = opts && 'clickTolerance' in opts ? opts.clickTolerance : null;
      let attributionControl = opts && 'attributionControl' in opts ? opts.attributionControl : null;
      let customAttribution = opts && 'customAttribution' in opts ? opts.customAttribution : null;
      let logoPosition = opts && 'logoPosition' in opts ? opts.logoPosition : null;
      let failIfMajorPerformanceCaveat = opts && 'failIfMajorPerformanceCaveat' in opts ? opts.failIfMajorPerformanceCaveat : null;
      let preserveDrawingBuffer = opts && 'preserveDrawingBuffer' in opts ? opts.preserveDrawingBuffer : null;
      let antialias = opts && 'antialias' in opts ? opts.antialias : null;
      let refreshExpiredTiles = opts && 'refreshExpiredTiles' in opts ? opts.refreshExpiredTiles : null;
      let maxBounds = opts && 'maxBounds' in opts ? opts.maxBounds : null;
      let scrollZoom = opts && 'scrollZoom' in opts ? opts.scrollZoom : null;
      let minZoom = opts && 'minZoom' in opts ? opts.minZoom : null;
      let maxZoom = opts && 'maxZoom' in opts ? opts.maxZoom : null;
      let minPitch = opts && 'minPitch' in opts ? opts.minPitch : null;
      let maxPitch = opts && 'maxPitch' in opts ? opts.maxPitch : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let boxZoom = opts && 'boxZoom' in opts ? opts.boxZoom : null;
      let dragRotate = opts && 'dragRotate' in opts ? opts.dragRotate : null;
      let dragPan = opts && 'dragPan' in opts ? opts.dragPan : null;
      let keyboard = opts && 'keyboard' in opts ? opts.keyboard : null;
      let doubleClickZoom = opts && 'doubleClickZoom' in opts ? opts.doubleClickZoom : null;
      let touchZoomRotate = opts && 'touchZoomRotate' in opts ? opts.touchZoomRotate : null;
      let trackResize = opts && 'trackResize' in opts ? opts.trackResize : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let zoom = opts && 'zoom' in opts ? opts.zoom : null;
      let bearing = opts && 'bearing' in opts ? opts.bearing : null;
      let pitch = opts && 'pitch' in opts ? opts.pitch : null;
      let bounds = opts && 'bounds' in opts ? opts.bounds : null;
      let fitBoundsOptions = opts && 'fitBoundsOptions' in opts ? opts.fitBoundsOptions : null;
      let renderWorldCopies = opts && 'renderWorldCopies' in opts ? opts.renderWorldCopies : null;
      let maxTileCacheSize = opts && 'maxTileCacheSize' in opts ? opts.maxTileCacheSize : null;
      let localIdeographFontFamily = opts && 'localIdeographFontFamily' in opts ? opts.localIdeographFontFamily : null;
      let transformRequest = opts && 'transformRequest' in opts ? opts.transformRequest : null;
      let collectResourceTiming = opts && 'collectResourceTiming' in opts ? opts.collectResourceTiming : null;
      let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : null;
      let crossSourceCollisions = opts && 'crossSourceCollisions' in opts ? opts.crossSourceCollisions : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      return new map.MapOptions.fromJsObject({interactive: (t0 = interactive, t0 == null ? true : t0), container: container, bearingSnap: bearingSnap, pitchWithRotate: (t0$ = pitchWithRotate, t0$ == null ? true : t0$), clickTolerance: (t0$0 = clickTolerance, t0$0 == null ? true : t0$0), attributionControl: (t0$1 = attributionControl, t0$1 == null ? true : t0$1), customAttribution: customAttribution, logoPosition: (t0$2 = logoPosition, t0$2 == null ? "bottom-left" : t0$2), failIfMajorPerformanceCaveat: failIfMajorPerformanceCaveat, preserveDrawingBuffer: preserveDrawingBuffer, antialias: antialias, refreshExpiredTiles: refreshExpiredTiles, maxBounds: (t0$3 = maxBounds, t0$3 == null ? null : t0$3.jsObject), scrollZoom: (t0$4 = scrollZoom, t0$4 == null ? true : t0$4), minZoom: minZoom, maxZoom: maxZoom, minPitch: minPitch, maxPitch: maxPitch, style: style, boxZoom: boxZoom, dragRotate: dragRotate, dragPan: (t0$5 = dragPan, t0$5 == null ? true : t0$5), keyboard: (t0$6 = keyboard, t0$6 == null ? true : t0$6), doubleClickZoom: (t0$7 = doubleClickZoom, t0$7 == null ? true : t0$7), touchZoomRotate: (t0$8 = touchZoomRotate, t0$8 == null ? true : t0$8), trackResize: (t0$9 = trackResize, t0$9 == null ? true : t0$9), center: (t0$10 = center, t0$10 == null ? null : t0$10.jsObject), zoom: zoom, bearing: bearing, pitch: pitch, bounds: (t0$11 = bounds, t0$11 == null ? null : t0$11.jsObject), fitBoundsOptions: fitBoundsOptions, renderWorldCopies: renderWorldCopies, maxTileCacheSize: maxTileCacheSize, localIdeographFontFamily: localIdeographFontFamily, transformRequest: dart.assertInterop(transformRequest), collectResourceTiming: collectResourceTiming, fadeDuration: fadeDuration, crossSourceCollisions: crossSourceCollisions, accessToken: accessToken, locale: locale});
    }
  };
  (map.MapOptions.fromJsObject = function(jsObject) {
    map.MapOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = map.MapOptions.prototype;
  dart.addTypeTests(map.MapOptions);
  dart.addTypeCaches(map.MapOptions);
  dart.setGetterSignature(map.MapOptions, () => ({
    __proto__: dart.getGetters(map.MapOptions.__proto__),
    hash: dart.dynamic,
    interactive: core.bool,
    container: dart.dynamic,
    bearingSnap: core.num,
    pitchWithRotate: core.bool,
    clickTolerance: core.num,
    attributionControl: core.bool,
    customAttribution: dart.dynamic,
    logoPosition: core.String,
    failIfMajorPerformanceCaveat: core.bool,
    preserveDrawingBuffer: core.bool,
    antialias: core.bool,
    refreshExpiredTiles: core.bool,
    maxBounds: lng_lat_bounds.LngLatBounds,
    scrollZoom: core.bool,
    minZoom: core.num,
    maxZoom: core.num,
    minPitch: core.num,
    maxPitch: core.num,
    style: dart.dynamic,
    boxZoom: core.bool,
    dragRotate: core.bool,
    dragPan: dart.dynamic,
    keyboard: core.bool,
    doubleClickZoom: core.bool,
    touchZoomRotate: core.bool,
    trackResize: core.bool,
    center: lng_lat.LngLat,
    zoom: core.num,
    bearing: core.num,
    pitch: core.num,
    bounds: lng_lat_bounds.LngLatBounds,
    fitBoundsOptions: dart.dynamic,
    renderWorldCopies: core.bool,
    maxTileCacheSize: core.num,
    localIdeographFontFamily: core.String,
    transformRequest: dart.fnType(dart.anonymousJSType("RequestParametersJsImpl"), [core.String, core.String]),
    collectResourceTiming: core.bool,
    fadeDuration: core.num,
    crossSourceCollisions: core.bool,
    accessToken: core.String,
    locale: dart.dynamic
  }));
  dart.setLibraryUri(map.MapOptions, I[4]);
  map.RequestParameters = class RequestParameters extends js$.JsObjectWrapper$(dart.anonymousJSType("RequestParametersJsImpl")) {
    get url() {
      return this.jsObject.url;
    }
    get credentials() {
      return this.jsObject.credentials;
    }
    get headers() {
      return this.jsObject.headers;
    }
    get method() {
      return this.jsObject.method;
    }
    get collectResourceTiming() {
      return this.jsObject.collectResourceTiming;
    }
    static new(opts) {
      let url = opts && 'url' in opts ? opts.url : null;
      let credentials = opts && 'credentials' in opts ? opts.credentials : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let method = opts && 'method' in opts ? opts.method : null;
      let collectResourceTiming = opts && 'collectResourceTiming' in opts ? opts.collectResourceTiming : null;
      return new map.RequestParameters.fromJsObject({url: url, credentials: credentials, headers: headers, method: method, collectResourceTiming: collectResourceTiming});
    }
  };
  (map.RequestParameters.fromJsObject = function(jsObject) {
    map.RequestParameters.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = map.RequestParameters.prototype;
  dart.addTypeTests(map.RequestParameters);
  dart.addTypeCaches(map.RequestParameters);
  dart.setGetterSignature(map.RequestParameters, () => ({
    __proto__: dart.getGetters(map.RequestParameters.__proto__),
    url: dart.nullable(core.String),
    credentials: dart.nullable(core.String),
    headers: dart.dynamic,
    method: dart.nullable(core.String),
    collectResourceTiming: dart.nullable(core.bool)
  }));
  dart.setLibraryUri(map.RequestParameters, I[4]);
  map.IControl = class IControl extends js$.JsObjectWrapper$(dart.anonymousJSType("IControlJsImpl")) {
    onAdd(map) {
      return this.jsObject.onAdd(map.jsObject);
    }
    onRemove(map) {
      return this.jsObject.onRemove(map.jsObject);
    }
    getDefaultPosition() {
      return this.jsObject.getDefaultPosition();
    }
  };
  (map.IControl.fromJsObject = function(jsObject) {
    map.IControl.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = map.IControl.prototype;
  dart.addTypeTests(map.IControl);
  dart.addTypeCaches(map.IControl);
  dart.setMethodSignature(map.IControl, () => ({
    __proto__: dart.getMethods(map.IControl.__proto__),
    onAdd: dart.fnType(html.HtmlElement, [map.MapboxMap]),
    onRemove: dart.fnType(dart.dynamic, [map.MapboxMap]),
    getDefaultPosition: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(map.IControl, I[4]);
  touch_zoom_rotate.TouchZoomRotateHandler = class TouchZoomRotateHandler extends js$.JsObjectWrapper$(dart.anonymousJSType("TouchZoomRotateHandlerJsImpl")) {
    isEnabled() {
      return this.jsObject.isEnabled();
    }
    enable(options = null) {
      return this.jsObject.enable(options);
    }
    disable() {
      return this.jsObject.disable();
    }
    disableRotation() {
      return this.jsObject.disableRotation();
    }
    enableRotation() {
      return this.jsObject.enableRotation();
    }
    onStart(e) {
      return this.jsObject.onStart(e);
    }
  };
  (touch_zoom_rotate.TouchZoomRotateHandler.fromJsObject = function(jsObject) {
    touch_zoom_rotate.TouchZoomRotateHandler.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = touch_zoom_rotate.TouchZoomRotateHandler.prototype;
  dart.addTypeTests(touch_zoom_rotate.TouchZoomRotateHandler);
  dart.addTypeCaches(touch_zoom_rotate.TouchZoomRotateHandler);
  dart.setMethodSignature(touch_zoom_rotate.TouchZoomRotateHandler, () => ({
    __proto__: dart.getMethods(touch_zoom_rotate.TouchZoomRotateHandler.__proto__),
    isEnabled: dart.fnType(core.bool, []),
    enable: dart.fnType(dart.dynamic, [], [dart.dynamic]),
    disable: dart.fnType(dart.dynamic, []),
    disableRotation: dart.fnType(dart.dynamic, []),
    enableRotation: dart.fnType(dart.dynamic, []),
    onStart: dart.fnType(dart.dynamic, [html.TouchEvent])
  }));
  dart.setLibraryUri(touch_zoom_rotate.TouchZoomRotateHandler, I[5]);
  scroll_zoom.ScrollZoomHandler = class ScrollZoomHandler extends js$.JsObjectWrapper$(dart.anonymousJSType("ScrollZoomHandlerJsImpl")) {
    setZoomRate(zoomRate) {
      return this.jsObject.setZoomRate(zoomRate);
    }
    setWheelZoomRate(wheelZoomRate) {
      return this.jsObject.setWheelZoomRate(wheelZoomRate);
    }
    isEnabled() {
      return this.jsObject.isEnabled();
    }
    isActive() {
      return this.jsObject.isActive();
    }
    isZooming() {
      return this.jsObject.isZooming();
    }
    enable(options = null) {
      return this.jsObject.enable(options);
    }
    disable() {
      return this.jsObject.disable();
    }
    onWheel(e) {
      return this.jsObject.onWheel(e);
    }
  };
  (scroll_zoom.ScrollZoomHandler.fromJsObject = function(jsObject) {
    scroll_zoom.ScrollZoomHandler.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = scroll_zoom.ScrollZoomHandler.prototype;
  dart.addTypeTests(scroll_zoom.ScrollZoomHandler);
  dart.addTypeCaches(scroll_zoom.ScrollZoomHandler);
  dart.setMethodSignature(scroll_zoom.ScrollZoomHandler, () => ({
    __proto__: dart.getMethods(scroll_zoom.ScrollZoomHandler.__proto__),
    setZoomRate: dart.fnType(dart.dynamic, [core.num]),
    setWheelZoomRate: dart.fnType(dart.dynamic, [core.num]),
    isEnabled: dart.fnType(core.bool, []),
    isActive: dart.fnType(core.bool, []),
    isZooming: dart.fnType(core.bool, []),
    enable: dart.fnType(dart.dynamic, [], [dart.dynamic]),
    disable: dart.fnType(dart.dynamic, []),
    onWheel: dart.fnType(dart.dynamic, [html.WheelEvent])
  }));
  dart.setLibraryUri(scroll_zoom.ScrollZoomHandler, I[6]);
  keyboard.KeyboardHandler = class KeyboardHandler extends js$.JsObjectWrapper$(dart.anonymousJSType("KeyboardHandlerJsImpl")) {
    isEnabled() {
      return this.jsObject.isEnabled();
    }
    enable() {
      return this.jsObject.enable();
    }
    disable() {
      return this.jsObject.disable();
    }
  };
  (keyboard.KeyboardHandler.fromJsObject = function(jsObject) {
    keyboard.KeyboardHandler.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = keyboard.KeyboardHandler.prototype;
  dart.addTypeTests(keyboard.KeyboardHandler);
  dart.addTypeCaches(keyboard.KeyboardHandler);
  dart.setMethodSignature(keyboard.KeyboardHandler, () => ({
    __proto__: dart.getMethods(keyboard.KeyboardHandler.__proto__),
    isEnabled: dart.fnType(core.bool, []),
    enable: dart.fnType(core.bool, []),
    disable: dart.fnType(core.bool, [])
  }));
  dart.setLibraryUri(keyboard.KeyboardHandler, I[7]);
  drag_rotate.DragRotateHandler = class DragRotateHandler extends js$.JsObjectWrapper$(dart.anonymousJSType("DragRotateHandlerJsImpl")) {
    isEnabled() {
      return this.jsObject.isEnabled();
    }
    isActive() {
      return this.jsObject.isActive();
    }
    enable() {
      return this.jsObject.enable();
    }
    disable() {
      return this.jsObject.disable();
    }
    onMouseDown(e) {
      return this.jsObject.onMouseDown(e);
    }
  };
  (drag_rotate.DragRotateHandler.fromJsObject = function(jsObject) {
    drag_rotate.DragRotateHandler.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = drag_rotate.DragRotateHandler.prototype;
  dart.addTypeTests(drag_rotate.DragRotateHandler);
  dart.addTypeCaches(drag_rotate.DragRotateHandler);
  dart.setMethodSignature(drag_rotate.DragRotateHandler, () => ({
    __proto__: dart.getMethods(drag_rotate.DragRotateHandler.__proto__),
    isEnabled: dart.fnType(core.bool, []),
    isActive: dart.fnType(core.bool, []),
    enable: dart.fnType(dart.dynamic, []),
    disable: dart.fnType(dart.dynamic, []),
    onMouseDown: dart.fnType(dart.dynamic, [html.MouseEvent])
  }));
  dart.setLibraryUri(drag_rotate.DragRotateHandler, I[8]);
  drag_pan.DragPanHandler = class DragPanHandler extends js$.JsObjectWrapper$(dart.anonymousJSType("DragPanHandlerJsImpl")) {
    isEnabled() {
      return this.jsObject.isEnabled();
    }
    isActive() {
      return this.jsObject.isActive();
    }
    enable() {
      return this.jsObject.enable();
    }
    disable() {
      return this.jsObject.disable();
    }
    onMouseDown(e) {
      return this.jsObject.onMouseDown(e);
    }
    onTouchStart(e) {
      return this.jsObject.onTouchStart(e);
    }
  };
  (drag_pan.DragPanHandler.fromJsObject = function(jsObject) {
    drag_pan.DragPanHandler.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = drag_pan.DragPanHandler.prototype;
  dart.addTypeTests(drag_pan.DragPanHandler);
  dart.addTypeCaches(drag_pan.DragPanHandler);
  dart.setMethodSignature(drag_pan.DragPanHandler, () => ({
    __proto__: dart.getMethods(drag_pan.DragPanHandler.__proto__),
    isEnabled: dart.fnType(core.bool, []),
    isActive: dart.fnType(core.bool, []),
    enable: dart.fnType(dart.dynamic, []),
    disable: dart.fnType(dart.dynamic, []),
    onMouseDown: dart.fnType(dart.dynamic, [html.MouseEvent]),
    onTouchStart: dart.fnType(dart.dynamic, [html.TouchEvent])
  }));
  dart.setLibraryUri(drag_pan.DragPanHandler, I[9]);
  dblclick_zoom.DoubleClickZoomHandler = class DoubleClickZoomHandler extends js$.JsObjectWrapper$(dart.anonymousJSType("DoubleClickZoomHandlerJsImpl")) {
    isEnabled() {
      return this.jsObject.isEnabled();
    }
    isActive() {
      return this.jsObject.isActive();
    }
    enable() {
      return this.jsObject.enable();
    }
    disable() {
      return this.jsObject.disable();
    }
    onTouchStart(e) {
      return this.jsObject.onTouchStart(e.jsObject);
    }
    onDblClick(e) {
      return this.jsObject.onDblClick(e.jsObject);
    }
  };
  (dblclick_zoom.DoubleClickZoomHandler.fromJsObject = function(jsObject) {
    dblclick_zoom.DoubleClickZoomHandler.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = dblclick_zoom.DoubleClickZoomHandler.prototype;
  dart.addTypeTests(dblclick_zoom.DoubleClickZoomHandler);
  dart.addTypeCaches(dblclick_zoom.DoubleClickZoomHandler);
  dart.setMethodSignature(dblclick_zoom.DoubleClickZoomHandler, () => ({
    __proto__: dart.getMethods(dblclick_zoom.DoubleClickZoomHandler.__proto__),
    isEnabled: dart.fnType(core.bool, []),
    isActive: dart.fnType(core.bool, []),
    enable: dart.fnType(dart.dynamic, []),
    disable: dart.fnType(dart.dynamic, []),
    onTouchStart: dart.fnType(dart.dynamic, [events.MapTouchEvent]),
    onDblClick: dart.fnType(dart.dynamic, [events.MapMouseEvent])
  }));
  dart.setLibraryUri(dblclick_zoom.DoubleClickZoomHandler, I[10]);
  box_zoom.BoxZoomHandler = class BoxZoomHandler extends js$.JsObjectWrapper$(dart.anonymousJSType("BoxZoomHandlerJsImpl")) {
    isEnabled() {
      return this.jsObject.isEnabled();
    }
    isActive() {
      return this.jsObject.isActive();
    }
    enable() {
      return this.jsObject.enable();
    }
    disable() {
      return this.jsObject.disable();
    }
    onMouseDown(e) {
      return this.jsObject.onMouseDown(e);
    }
  };
  (box_zoom.BoxZoomHandler.fromJsObject = function(jsObject) {
    box_zoom.BoxZoomHandler.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = box_zoom.BoxZoomHandler.prototype;
  dart.addTypeTests(box_zoom.BoxZoomHandler);
  dart.addTypeCaches(box_zoom.BoxZoomHandler);
  dart.setMethodSignature(box_zoom.BoxZoomHandler, () => ({
    __proto__: dart.getMethods(box_zoom.BoxZoomHandler.__proto__),
    isEnabled: dart.fnType(core.bool, []),
    isActive: dart.fnType(core.bool, []),
    enable: dart.fnType(dart.dynamic, []),
    disable: dart.fnType(dart.dynamic, []),
    onMouseDown: dart.fnType(dart.dynamic, [html.MouseEvent])
  }));
  dart.setLibraryUri(box_zoom.BoxZoomHandler, I[11]);
  events.MapMouseEvent = class MapMouseEvent extends js$.JsObjectWrapper$(dart.anonymousJSType("MapMouseEventJsImpl")) {
    get type() {
      return this.jsObject.type;
    }
    get target() {
      return new map.MapboxMap.fromJsObject(this.jsObject.target);
    }
    get originalEvent() {
      return this.jsObject.originalEvent;
    }
    get point() {
      return new point.Point.fromJsObject(this.jsObject.point);
    }
    get lngLat() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.lngLat);
    }
    preventDefault() {
      return this.jsObject.preventDefault();
    }
    get defaultPrevented() {
      return this.jsObject.defaultPrevented;
    }
  };
  (events.MapMouseEvent.fromJsObject = function(jsObject) {
    events.MapMouseEvent.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = events.MapMouseEvent.prototype;
  dart.addTypeTests(events.MapMouseEvent);
  dart.addTypeCaches(events.MapMouseEvent);
  dart.setMethodSignature(events.MapMouseEvent, () => ({
    __proto__: dart.getMethods(events.MapMouseEvent.__proto__),
    preventDefault: dart.fnType(dart.dynamic, [])
  }));
  dart.setGetterSignature(events.MapMouseEvent, () => ({
    __proto__: dart.getGetters(events.MapMouseEvent.__proto__),
    type: core.String,
    target: map.MapboxMap,
    originalEvent: html.MouseEvent,
    point: point.Point,
    lngLat: lng_lat.LngLat,
    defaultPrevented: core.bool
  }));
  dart.setLibraryUri(events.MapMouseEvent, I[12]);
  events.MapTouchEvent = class MapTouchEvent extends js$.JsObjectWrapper$(dart.anonymousJSType("MapTouchEventJsImpl")) {
    get type() {
      return this.jsObject.type;
    }
    get target() {
      return new map.MapboxMap.fromJsObject(this.jsObject.target);
    }
    get originalEvent() {
      return this.jsObject.originalEvent;
    }
    get lngLat() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.lngLat);
    }
    get point() {
      return new point.Point.fromJsObject(this.jsObject.point);
    }
    get points() {
      return this.jsObject.points[$map](point.Point, dart.fn(f => new point.Point.fromJsObject(f), T.PointJsImplToPoint()))[$toList]();
    }
    get lngLats() {
      return this.jsObject.lngLats[$map](lng_lat.LngLat, dart.fn(f => new lng_lat.LngLat.fromJsObject(dart.lazyJSType(() => dart.global.mapboxgl.LngLat, "mapboxgl.LngLat").as(f)), T.dynamicToLngLat()))[$toList]();
    }
    preventDefault() {
      return this.jsObject.preventDefault();
    }
    get defaultPrevented() {
      return this.jsObject.defaultPrevented;
    }
  };
  (events.MapTouchEvent.fromJsObject = function(jsObject) {
    events.MapTouchEvent.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = events.MapTouchEvent.prototype;
  dart.addTypeTests(events.MapTouchEvent);
  dart.addTypeCaches(events.MapTouchEvent);
  dart.setMethodSignature(events.MapTouchEvent, () => ({
    __proto__: dart.getMethods(events.MapTouchEvent.__proto__),
    preventDefault: dart.fnType(dart.dynamic, [])
  }));
  dart.setGetterSignature(events.MapTouchEvent, () => ({
    __proto__: dart.getGetters(events.MapTouchEvent.__proto__),
    type: core.String,
    target: map.MapboxMap,
    originalEvent: html.TouchEvent,
    lngLat: lng_lat.LngLat,
    point: point.Point,
    points: core.List$(point.Point),
    lngLats: core.List$(lng_lat.LngLat),
    defaultPrevented: core.bool
  }));
  dart.setLibraryUri(events.MapTouchEvent, I[12]);
  navigation_control.NavigationControlOptions = class NavigationControlOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("NavigationControlOptionsJsImpl")) {
    get showCompass() {
      return this.jsObject.showCompass;
    }
    get showZoom() {
      return this.jsObject.showZoom;
    }
    get visualizePitch() {
      return this.jsObject.visualizePitch;
    }
    static new(opts) {
      let showCompass = opts && 'showCompass' in opts ? opts.showCompass : null;
      let showZoom = opts && 'showZoom' in opts ? opts.showZoom : null;
      let visualizePitch = opts && 'visualizePitch' in opts ? opts.visualizePitch : null;
      return new navigation_control.NavigationControlOptions.fromJsObject({showCompass: showCompass, showZoom: showZoom, visualizePitch: visualizePitch});
    }
  };
  (navigation_control.NavigationControlOptions.fromJsObject = function(jsObject) {
    navigation_control.NavigationControlOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = navigation_control.NavigationControlOptions.prototype;
  dart.addTypeTests(navigation_control.NavigationControlOptions);
  dart.addTypeCaches(navigation_control.NavigationControlOptions);
  dart.setGetterSignature(navigation_control.NavigationControlOptions, () => ({
    __proto__: dart.getGetters(navigation_control.NavigationControlOptions.__proto__),
    showCompass: core.bool,
    showZoom: core.bool,
    visualizePitch: core.bool
  }));
  dart.setLibraryUri(navigation_control.NavigationControlOptions, I[13]);
  navigation_control.NavigationControl = class NavigationControl extends js$.JsObjectWrapper$(dart.lazyJSType(() => dart.global.mapboxgl.NavigationControl, "mapboxgl.NavigationControl")) {
    get options() {
      return new navigation_control.NavigationControlOptions.fromJsObject(this.jsObject.options);
    }
    static new(options) {
      return new navigation_control.NavigationControl.fromJsObject(new dart.global.mapboxgl.NavigationControl(options.jsObject));
    }
    onAdd(map) {
      return this.jsObject.onAdd(map.jsObject);
    }
    onRemove() {
      return this.jsObject.onRemove();
    }
  };
  (navigation_control.NavigationControl.fromJsObject = function(jsObject) {
    navigation_control.NavigationControl.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = navigation_control.NavigationControl.prototype;
  dart.addTypeTests(navigation_control.NavigationControl);
  dart.addTypeCaches(navigation_control.NavigationControl);
  dart.setMethodSignature(navigation_control.NavigationControl, () => ({
    __proto__: dart.getMethods(navigation_control.NavigationControl.__proto__),
    onAdd: dart.fnType(dart.dynamic, [map.MapboxMap]),
    onRemove: dart.fnType(dart.dynamic, [])
  }));
  dart.setGetterSignature(navigation_control.NavigationControl, () => ({
    __proto__: dart.getGetters(navigation_control.NavigationControl.__proto__),
    options: navigation_control.NavigationControlOptions
  }));
  dart.setLibraryUri(navigation_control.NavigationControl, I[13]);
  logo_control.LogoControl = class LogoControl extends js$.JsObjectWrapper$(dart.lazyJSType(() => dart.global.mapboxgl.LogoControl, "mapboxgl.LogoControl")) {
    static new() {
      return new logo_control.LogoControl.fromJsObject(new dart.global.mapboxgl.LogoControl());
    }
    onAdd(map) {
      return this.jsObject.onAdd(map.jsObject);
    }
    onRemove() {
      return this.jsObject.onRemove();
    }
    getDefaultPosition() {
      return this.jsObject.getDefaultPosition();
    }
  };
  (logo_control.LogoControl.fromJsObject = function(jsObject) {
    logo_control.LogoControl.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = logo_control.LogoControl.prototype;
  dart.addTypeTests(logo_control.LogoControl);
  dart.addTypeCaches(logo_control.LogoControl);
  dart.setMethodSignature(logo_control.LogoControl, () => ({
    __proto__: dart.getMethods(logo_control.LogoControl.__proto__),
    onAdd: dart.fnType(dart.dynamic, [map.MapboxMap]),
    onRemove: dart.fnType(dart.dynamic, []),
    getDefaultPosition: dart.fnType(dart.dynamic, [])
  }));
  dart.setLibraryUri(logo_control.LogoControl, I[14]);
  geolocate_control.GeolocateControlOptions = class GeolocateControlOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("GeolocateControlOptionsJsImpl")) {
    get positionOptions() {
      return new geolocate_control.PositionOptions.fromJsObject(this.jsObject.positionOptions);
    }
    get fitBoundsOptions() {
      return this.jsObject.fitBoundsOptions;
    }
    get trackUserLocation() {
      return this.jsObject.trackUserLocation;
    }
    get showAccuracyCircle() {
      return this.jsObject.showAccuracyCircle;
    }
    get showUserLocation() {
      return this.jsObject.showUserLocation;
    }
    static new(opts) {
      let positionOptions = opts && 'positionOptions' in opts ? opts.positionOptions : null;
      let fitBoundsOptions = opts && 'fitBoundsOptions' in opts ? opts.fitBoundsOptions : null;
      let trackUserLocation = opts && 'trackUserLocation' in opts ? opts.trackUserLocation : null;
      let showAccuracyCircle = opts && 'showAccuracyCircle' in opts ? opts.showAccuracyCircle : null;
      let showUserLocation = opts && 'showUserLocation' in opts ? opts.showUserLocation : null;
      return new geolocate_control.GeolocateControlOptions.fromJsObject({positionOptions: positionOptions.jsObject, fitBoundsOptions: fitBoundsOptions, trackUserLocation: trackUserLocation, showAccuracyCircle: showAccuracyCircle, showUserLocation: showUserLocation});
    }
  };
  (geolocate_control.GeolocateControlOptions.fromJsObject = function(jsObject) {
    geolocate_control.GeolocateControlOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = geolocate_control.GeolocateControlOptions.prototype;
  dart.addTypeTests(geolocate_control.GeolocateControlOptions);
  dart.addTypeCaches(geolocate_control.GeolocateControlOptions);
  dart.setGetterSignature(geolocate_control.GeolocateControlOptions, () => ({
    __proto__: dart.getGetters(geolocate_control.GeolocateControlOptions.__proto__),
    positionOptions: geolocate_control.PositionOptions,
    fitBoundsOptions: dart.dynamic,
    trackUserLocation: core.bool,
    showAccuracyCircle: core.bool,
    showUserLocation: core.bool
  }));
  dart.setLibraryUri(geolocate_control.GeolocateControlOptions, I[15]);
  geolocate_control.PositionOptions = class PositionOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("PositionOptionsJsImpl")) {
    get enableHighAccuracy() {
      return this.jsObject.enableHighAccuracy;
    }
    get maximumAge() {
      return this.jsObject.maximumAge;
    }
    get timeout() {
      return this.jsObject.timeout;
    }
    static new(opts) {
      let enableHighAccuracy = opts && 'enableHighAccuracy' in opts ? opts.enableHighAccuracy : null;
      let maximumAge = opts && 'maximumAge' in opts ? opts.maximumAge : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : null;
      return new geolocate_control.PositionOptions.fromJsObject({enableHighAccuracy: enableHighAccuracy, maximumAge: maximumAge, timeout: timeout});
    }
  };
  (geolocate_control.PositionOptions.fromJsObject = function(jsObject) {
    geolocate_control.PositionOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = geolocate_control.PositionOptions.prototype;
  dart.addTypeTests(geolocate_control.PositionOptions);
  dart.addTypeCaches(geolocate_control.PositionOptions);
  dart.setGetterSignature(geolocate_control.PositionOptions, () => ({
    __proto__: dart.getGetters(geolocate_control.PositionOptions.__proto__),
    enableHighAccuracy: core.bool,
    maximumAge: core.num,
    timeout: core.num
  }));
  dart.setLibraryUri(geolocate_control.PositionOptions, I[15]);
  var jsObject$3 = dart.privateName(geolocate_control, "GeolocateControl.jsObject");
  geolocate_control.GeolocateControl = class GeolocateControl extends evented.Evented {
    get jsObject() {
      return this[jsObject$3];
    }
    set jsObject(value) {
      super.jsObject = value;
    }
    get options() {
      return new geolocate_control.GeolocateControlOptions.fromJsObject(this.jsObject.options);
    }
    static new(options) {
      return new geolocate_control.GeolocateControl.fromJsObject(new dart.global.mapboxgl.GeolocateControl(options.jsObject));
    }
    onAdd(map) {
      return this.jsObject.onAdd(map.jsObject);
    }
    onRemove(map) {
      return this.jsObject.onRemove(map.jsObject);
    }
    trigger() {
      return this.jsObject.trigger();
    }
  };
  (geolocate_control.GeolocateControl.fromJsObject = function(jsObject) {
    this[jsObject$3] = jsObject;
    geolocate_control.GeolocateControl.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = geolocate_control.GeolocateControl.prototype;
  dart.addTypeTests(geolocate_control.GeolocateControl);
  dart.addTypeCaches(geolocate_control.GeolocateControl);
  dart.setMethodSignature(geolocate_control.GeolocateControl, () => ({
    __proto__: dart.getMethods(geolocate_control.GeolocateControl.__proto__),
    onAdd: dart.fnType(dart.dynamic, [map.MapboxMap]),
    onRemove: dart.fnType(dart.dynamic, [map.MapboxMap]),
    trigger: dart.fnType(dart.dynamic, [])
  }));
  dart.setGetterSignature(geolocate_control.GeolocateControl, () => ({
    __proto__: dart.getGetters(geolocate_control.GeolocateControl.__proto__),
    options: geolocate_control.GeolocateControlOptions
  }));
  dart.setLibraryUri(geolocate_control.GeolocateControl, I[15]);
  dart.setFieldSignature(geolocate_control.GeolocateControl, () => ({
    __proto__: dart.getFields(geolocate_control.GeolocateControl.__proto__),
    jsObject: dart.finalFieldType(dart.lazyJSType(() => dart.global.mapboxgl.GeolocateControl, "mapboxgl.GeolocateControl"))
  }));
  camera.CameraOptions = class CameraOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("CameraOptionsJsImpl")) {
    get center() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.center);
    }
    get zoom() {
      return this.jsObject.zoom;
    }
    get bearing() {
      return this.jsObject.bearing;
    }
    get pitch() {
      return this.jsObject.pitch;
    }
    get around() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.around);
    }
    static new(opts) {
      let t0, t0$;
      let center = opts && 'center' in opts ? opts.center : null;
      let zoom = opts && 'zoom' in opts ? opts.zoom : null;
      let bearing = opts && 'bearing' in opts ? opts.bearing : null;
      let pitch = opts && 'pitch' in opts ? opts.pitch : null;
      let around = opts && 'around' in opts ? opts.around : null;
      return new camera.CameraOptions.fromJsObject({center: (t0 = center, t0 == null ? null : t0.jsObject), zoom: zoom, bearing: bearing, pitch: pitch, around: (t0$ = around, t0$ == null ? null : t0$.jsObject)});
    }
  };
  (camera.CameraOptions.fromJsObject = function(jsObject) {
    camera.CameraOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = camera.CameraOptions.prototype;
  dart.addTypeTests(camera.CameraOptions);
  dart.addTypeCaches(camera.CameraOptions);
  dart.setGetterSignature(camera.CameraOptions, () => ({
    __proto__: dart.getGetters(camera.CameraOptions.__proto__),
    center: lng_lat.LngLat,
    zoom: core.num,
    bearing: core.num,
    pitch: core.num,
    around: lng_lat.LngLat
  }));
  dart.setLibraryUri(camera.CameraOptions, I[3]);
  camera.AnimationOptions = class AnimationOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("AnimationOptionsJsImpl")) {
    get duration() {
      return this.jsObject.duration;
    }
    get easing() {
      return this.jsObject.easing;
    }
    get offset() {
      return new point.Point.fromJsObject(this.jsObject.offset);
    }
    get animate() {
      return this.jsObject.animate;
    }
    get essential() {
      return this.jsObject.essential;
    }
    static new(opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let easing = opts && 'easing' in opts ? opts.easing : null;
      let offset = opts && 'offset' in opts ? opts.offset : null;
      let animate = opts && 'animate' in opts ? opts.animate : null;
      let essential = opts && 'essential' in opts ? opts.essential : null;
      return new camera.AnimationOptions.fromJsObject({duration: duration, easing: dart.assertInterop(easing), offset: offset.jsObject, animate: animate, essential: essential});
    }
  };
  (camera.AnimationOptions.fromJsObject = function(jsObject) {
    camera.AnimationOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = camera.AnimationOptions.prototype;
  dart.addTypeTests(camera.AnimationOptions);
  dart.addTypeCaches(camera.AnimationOptions);
  dart.setGetterSignature(camera.AnimationOptions, () => ({
    __proto__: dart.getGetters(camera.AnimationOptions.__proto__),
    duration: core.num,
    easing: dart.fnType(core.num, [core.num]),
    offset: point.Point,
    animate: core.bool,
    essential: core.bool
  }));
  dart.setLibraryUri(camera.AnimationOptions, I[3]);
  camera.PaddingOptions = class PaddingOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("PaddingOptionsJsImpl")) {
    get top() {
      return this.jsObject.top;
    }
    get bottom() {
      return this.jsObject.bottom;
    }
    get left() {
      return this.jsObject.left;
    }
    get right() {
      return this.jsObject.right;
    }
    static new(opts) {
      let top = opts && 'top' in opts ? opts.top : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let left = opts && 'left' in opts ? opts.left : null;
      let right = opts && 'right' in opts ? opts.right : null;
      return new camera.PaddingOptions.fromJsObject({top: top, bottom: bottom, left: left, right: right});
    }
  };
  (camera.PaddingOptions.fromJsObject = function(jsObject) {
    camera.PaddingOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = camera.PaddingOptions.prototype;
  dart.addTypeTests(camera.PaddingOptions);
  dart.addTypeCaches(camera.PaddingOptions);
  dart.setGetterSignature(camera.PaddingOptions, () => ({
    __proto__: dart.getGetters(camera.PaddingOptions.__proto__),
    top: core.num,
    bottom: core.num,
    left: core.num,
    right: core.num
  }));
  dart.setLibraryUri(camera.PaddingOptions, I[3]);
  style_image.StyleImage = class StyleImage extends js$.JsObjectWrapper$(dart.anonymousJSType("StyleImageJsImpl")) {
    get data() {
      return this.jsObject.data;
    }
    get pixelRatio() {
      return this.jsObject.pixelRatio;
    }
    get sdf() {
      return this.jsObject.sdf;
    }
    get version() {
      return this.jsObject.version;
    }
    get hasRenderCallback() {
      return this.jsObject.hasRenderCallback;
    }
    get userImage() {
      return new style_image.StyleImageInterface.fromJsObject(this.jsObject.userImage);
    }
  };
  (style_image.StyleImage.fromJsObject = function(jsObject) {
    style_image.StyleImage.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = style_image.StyleImage.prototype;
  dart.addTypeTests(style_image.StyleImage);
  dart.addTypeCaches(style_image.StyleImage);
  dart.setGetterSignature(style_image.StyleImage, () => ({
    __proto__: dart.getGetters(style_image.StyleImage.__proto__),
    data: dart.dynamic,
    pixelRatio: core.num,
    sdf: core.bool,
    version: core.num,
    hasRenderCallback: core.bool,
    userImage: style_image.StyleImageInterface
  }));
  dart.setLibraryUri(style_image.StyleImage, I[16]);
  style_image.StyleImageInterface = class StyleImageInterface extends js$.JsObjectWrapper$(dart.anonymousJSType("StyleImageInterfaceJsImpl")) {
    get width() {
      return this.jsObject.width;
    }
    get height() {
      return this.jsObject.height;
    }
    get data() {
      return this.jsObject.data;
    }
    get render() {
      return this.jsObject.render;
    }
    get onAdd() {
      return this.jsObject.onAdd;
    }
    get onRemove() {
      return this.jsObject.onRemove;
    }
  };
  (style_image.StyleImageInterface.fromJsObject = function(jsObject) {
    style_image.StyleImageInterface.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = style_image.StyleImageInterface.prototype;
  dart.addTypeTests(style_image.StyleImageInterface);
  dart.addTypeCaches(style_image.StyleImageInterface);
  dart.setGetterSignature(style_image.StyleImageInterface, () => ({
    __proto__: dart.getGetters(style_image.StyleImageInterface.__proto__),
    width: core.num,
    height: core.num,
    data: dart.dynamic,
    render: core.Function,
    onAdd: dart.fnType(dart.dynamic, [dart.lazyJSType(() => dart.global.mapboxgl.Map, "mapboxgl.Map"), core.String]),
    onRemove: core.Function
  }));
  dart.setLibraryUri(style_image.StyleImageInterface, I[16]);
  style.StyleSetterOptions = class StyleSetterOptions extends js$.JsObjectWrapper$(dart.anonymousJSType("StyleSetterOptionsJsImpl")) {
    get validate() {
      return this.jsObject.validate;
    }
  };
  (style.StyleSetterOptions.fromJsObject = function(jsObject) {
    style.StyleSetterOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = style.StyleSetterOptions.prototype;
  dart.addTypeTests(style.StyleSetterOptions);
  dart.addTypeCaches(style.StyleSetterOptions);
  dart.setGetterSignature(style.StyleSetterOptions, () => ({
    __proto__: dart.getGetters(style.StyleSetterOptions.__proto__),
    validate: core.bool
  }));
  dart.setLibraryUri(style.StyleSetterOptions, I[17]);
  style.Style = class Style extends js$.JsObjectWrapper$(dart.lazyJSType(() => dart.global.mapboxgl.Style, "mapboxgl.Style")) {
    loadURL(url, options) {
      return this.jsObject.loadURL(url, options);
    }
    loadJSON(json, option) {
      return this.jsObject.loadJSON(json, option.jsObject);
    }
    loaded() {
      return this.jsObject.loaded();
    }
    hasTransitions() {
      return this.jsObject.hasTransitions();
    }
    update(parameters) {
      return this.jsObject.update(parameters.jsObject);
    }
    setState(nextState) {
      return this.jsObject.setState(nextState);
    }
    addImage(id, image) {
      return this.jsObject.addImage(id, image.jsObject);
    }
    updateImage(id, image) {
      return this.jsObject.updateImage(id, image.jsObject);
    }
    getImage(id) {
      return new style_image.StyleImage.fromJsObject(this.jsObject.getImage(id));
    }
    removeImage(id) {
      return this.jsObject.removeImage(id);
    }
    listImages() {
      return this.jsObject.listImages();
    }
    addSource(id, source, options) {
      return this.jsObject.addSource(id, source, options.jsObject);
    }
    removeSource(id) {
      return this.jsObject.removeSource(id);
    }
    setGeoJSONSourceData(id, data) {
      return this.jsObject.setGeoJSONSourceData(id, data);
    }
    getSource(id) {
      return this.jsObject.getSource(id);
    }
    addLayer(layerObject, before = null, options = null) {
      return this.jsObject.addLayer(layerObject);
    }
    moveLayer(id, before = null) {
      return this.jsObject.moveLayer(id);
    }
    removeLayer(id) {
      return this.jsObject.removeLayer(id);
    }
    getLayer(id) {
      return this.jsObject.getLayer(id);
    }
    setLayerZoomRange(layerId, minzoom = null, maxzoom = null) {
      return this.jsObject.setLayerZoomRange(layerId);
    }
    setFilter(layerId, filter, options) {
      return this.jsObject.setFilter(layerId, filter, options.jsObject);
    }
    getFilter(layer) {
      return this.jsObject.getFilter(layer);
    }
    setLayoutProperty(layerId, name, value, options) {
      return this.jsObject.setLayoutProperty(layerId, name, value, options.jsObject);
    }
    getLayoutProperty(layerId, name) {
      return this.jsObject.getLayoutProperty(layerId, name);
    }
    setPaintProperty(layerId, name, value, options) {
      return this.jsObject.setPaintProperty(layerId, name, value, options.jsObject);
    }
    getPaintProperty(layer, name) {
      return this.jsObject.getPaintProperty(layer, name);
    }
    setFeatureState(target, state) {
      return this.jsObject.setFeatureState(target, state);
    }
    removeFeatureState(target, key = null) {
      return this.jsObject.removeFeatureState(target);
    }
    getFeatureState(target) {
      return this.jsObject.getFeatureState(target);
    }
    getTransition() {
      return this.jsObject.getTransition();
    }
    serialize() {
      return this.jsObject.serialize();
    }
    querySourceFeatures(sourceID, params) {
      return this.jsObject.querySourceFeatures(sourceID, params);
    }
    addSourceType(name, sourceType, callback) {
      return this.jsObject.addSourceType(name, sourceType, callback);
    }
    getLight() {
      return this.jsObject.getLight();
    }
    setLight(lightOptions, options) {
      return this.jsObject.setLight(lightOptions, options.jsObject);
    }
    getImages(mapId, params, callback) {
      return this.jsObject.getImages(mapId, params, callback);
    }
    getGlyphs(mapId, params, callback) {
      return this.jsObject.getGlyphs(mapId, params, callback);
    }
    getResource(mapId, params, callback) {
      return this.jsObject.getResource(mapId, params.jsObject, callback);
    }
  };
  (style.Style.fromJsObject = function(jsObject) {
    style.Style.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = style.Style.prototype;
  dart.addTypeTests(style.Style);
  dart.addTypeCaches(style.Style);
  dart.setMethodSignature(style.Style, () => ({
    __proto__: dart.getMethods(style.Style.__proto__),
    loadURL: dart.fnType(dart.dynamic, [core.String, dart.dynamic]),
    loadJSON: dart.fnType(dart.dynamic, [dart.dynamic, style.StyleSetterOptions]),
    loaded: dart.fnType(dart.dynamic, []),
    hasTransitions: dart.fnType(dart.dynamic, []),
    update: dart.fnType(dart.dynamic, [evaluation_parameters.EvaluationParameters]),
    setState: dart.fnType(dart.dynamic, [dart.dynamic]),
    addImage: dart.fnType(dart.dynamic, [core.String, style_image.StyleImage]),
    updateImage: dart.fnType(dart.dynamic, [core.String, style_image.StyleImage]),
    getImage: dart.fnType(style_image.StyleImage, [core.String]),
    removeImage: dart.fnType(dart.dynamic, [core.String]),
    listImages: dart.fnType(dart.dynamic, []),
    addSource: dart.fnType(dart.dynamic, [core.String, dart.dynamic, style.StyleSetterOptions]),
    removeSource: dart.fnType(dart.dynamic, [core.String]),
    setGeoJSONSourceData: dart.fnType(dart.dynamic, [core.String, dart.dynamic]),
    getSource: dart.fnType(dart.dynamic, [core.String]),
    addLayer: dart.fnType(dart.dynamic, [dart.dynamic], [dart.nullable(core.String), dart.nullable(style.StyleSetterOptions)]),
    moveLayer: dart.fnType(dart.dynamic, [core.String], [dart.nullable(core.String)]),
    removeLayer: dart.fnType(dart.dynamic, [core.String]),
    getLayer: dart.fnType(dart.dynamic, [core.String]),
    setLayerZoomRange: dart.fnType(dart.dynamic, [core.String], [dart.nullable(core.num), dart.nullable(core.num)]),
    setFilter: dart.fnType(dart.dynamic, [core.String, dart.dynamic, style.StyleSetterOptions]),
    getFilter: dart.fnType(dart.dynamic, [core.String]),
    setLayoutProperty: dart.fnType(dart.dynamic, [core.String, core.String, dart.dynamic, style.StyleSetterOptions]),
    getLayoutProperty: dart.fnType(dart.dynamic, [core.String, core.String]),
    setPaintProperty: dart.fnType(dart.dynamic, [core.String, core.String, dart.dynamic, style.StyleSetterOptions]),
    getPaintProperty: dart.fnType(dart.dynamic, [core.String, core.String]),
    setFeatureState: dart.fnType(dart.dynamic, [dart.dynamic, dart.dynamic]),
    removeFeatureState: dart.fnType(dart.dynamic, [dart.dynamic], [dart.nullable(core.String)]),
    getFeatureState: dart.fnType(dart.dynamic, [dart.dynamic]),
    getTransition: dart.fnType(dart.dynamic, []),
    serialize: dart.fnType(dart.dynamic, []),
    querySourceFeatures: dart.fnType(dart.dynamic, [core.String, dart.dynamic]),
    addSourceType: dart.fnType(dart.dynamic, [core.String, dart.dynamic, core.Function]),
    getLight: dart.fnType(dart.dynamic, []),
    setLight: dart.fnType(dart.dynamic, [dart.dynamic, style.StyleSetterOptions]),
    getImages: dart.fnType(dart.dynamic, [core.String, dart.dynamic, core.Function]),
    getGlyphs: dart.fnType(dart.dynamic, [core.String, dart.dynamic, core.Function]),
    getResource: dart.fnType(dart.dynamic, [core.String, map.RequestParameters, core.Function])
  }));
  dart.setLibraryUri(style.Style, I[17]);
  style.StyleFunction = class StyleFunction extends js$.JsObjectWrapper$(dart.anonymousJSType("StyleFunctionJsImpl")) {
    static new(opts) {
      let base = opts && 'base' in opts ? opts.base : null;
      let stops = opts && 'stops' in opts ? opts.stops : null;
      return new style.StyleFunction.fromJsObject({base: base, stops: stops});
    }
  };
  (style.StyleFunction.fromJsObject = function(jsObject) {
    style.StyleFunction.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = style.StyleFunction.prototype;
  dart.addTypeTests(style.StyleFunction);
  dart.addTypeCaches(style.StyleFunction);
  dart.setLibraryUri(style.StyleFunction, I[17]);
  vector_source.VectorSource = class VectorSource extends source$.Source$(dart.anonymousJSType("VectorSourceJsImpl")) {
    get url() {
      return this.jsObject.url;
    }
    get tiles() {
      return this.jsObject.tiles;
    }
    static new(opts) {
      let url = opts && 'url' in opts ? opts.url : null;
      let tiles = opts && 'tiles' in opts ? opts.tiles : null;
      if (url != null && tiles != null) {
        dart.throw(core.Exception.new("Specify only one between url and tiles"));
      }
      if (url != null) {
        return new vector_source.VectorSource.fromJsObject({type: "vector", url: url});
      }
      return new vector_source.VectorSource.fromJsObject({type: "vector", tiles: tiles});
    }
    get dict() {
      let dict = new (T.IdentityMapOfString$dynamic()).from(["type", "vector"]);
      if (this.url != null) {
        dict[$_set]("url", this.url);
      }
      if (this.tiles != null) {
        dict[$_set]("tiles", this.tiles);
      }
      return dict;
    }
  };
  (vector_source.VectorSource.fromJsObject = function(jsObject) {
    vector_source.VectorSource.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = vector_source.VectorSource.prototype;
  dart.addTypeTests(vector_source.VectorSource);
  dart.addTypeCaches(vector_source.VectorSource);
  dart.setGetterSignature(vector_source.VectorSource, () => ({
    __proto__: dart.getGetters(vector_source.VectorSource.__proto__),
    url: dart.nullable(core.String),
    tiles: dart.nullable(core.List$(core.String))
  }));
  dart.setLibraryUri(vector_source.VectorSource, I[18]);
  geojson_source.GeoJsonSource = class GeoJsonSource extends source$.Source$(dart.anonymousJSType("GeoJsonSourceJsImpl")) {
    get data() {
      return new geojson.FeatureCollection.fromJsObject(this.jsObject.data);
    }
    static new(opts) {
      let data = opts && 'data' in opts ? opts.data : null;
      return new geojson_source.GeoJsonSource.fromJsObject({type: "geojson", data: data.jsObject});
    }
    setData(featureCollection) {
      return new geojson_source.GeoJsonSource.fromJsObject(this.jsObject.setData(featureCollection.jsObject));
    }
    get dict() {
      return new (T.IdentityMapOfString$dynamic()).from(["type", "geojson", "data", this.data.jsObject]);
    }
  };
  (geojson_source.GeoJsonSource.fromJsObject = function(jsObject) {
    geojson_source.GeoJsonSource.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = geojson_source.GeoJsonSource.prototype;
  dart.addTypeTests(geojson_source.GeoJsonSource);
  dart.addTypeCaches(geojson_source.GeoJsonSource);
  dart.setMethodSignature(geojson_source.GeoJsonSource, () => ({
    __proto__: dart.getMethods(geojson_source.GeoJsonSource.__proto__),
    setData: dart.fnType(geojson_source.GeoJsonSource, [geojson.FeatureCollection])
  }));
  dart.setGetterSignature(geojson_source.GeoJsonSource, () => ({
    __proto__: dart.getGetters(geojson_source.GeoJsonSource.__proto__),
    data: geojson.FeatureCollection
  }));
  dart.setLibraryUri(geojson_source.GeoJsonSource, I[19]);
  var id$ = dart.privateName(symbol_layer, "SymbolLayer.id");
  var metadata$ = dart.privateName(symbol_layer, "SymbolLayer.metadata");
  var source$0 = dart.privateName(symbol_layer, "SymbolLayer.source");
  var sourceLayer$ = dart.privateName(symbol_layer, "SymbolLayer.sourceLayer");
  var minZoom$ = dart.privateName(symbol_layer, "SymbolLayer.minZoom");
  var maxZoom$ = dart.privateName(symbol_layer, "SymbolLayer.maxZoom");
  var filter$ = dart.privateName(symbol_layer, "SymbolLayer.filter");
  var layout$ = dart.privateName(symbol_layer, "SymbolLayer.layout");
  var paint$ = dart.privateName(symbol_layer, "SymbolLayer.paint");
  symbol_layer.SymbolLayer = class SymbolLayer extends layer$.Layer {
    get id() {
      return this[id$];
    }
    set id(value) {
      this[id$] = value;
    }
    get metadata() {
      return this[metadata$];
    }
    set metadata(value) {
      this[metadata$] = value;
    }
    get source() {
      return this[source$0];
    }
    set source(value) {
      this[source$0] = value;
    }
    get sourceLayer() {
      return this[sourceLayer$];
    }
    set sourceLayer(value) {
      this[sourceLayer$] = value;
    }
    get minZoom() {
      return this[minZoom$];
    }
    set minZoom(value) {
      this[minZoom$] = value;
    }
    get maxZoom() {
      return this[maxZoom$];
    }
    set maxZoom(value) {
      this[maxZoom$] = value;
    }
    get filter() {
      return this[filter$];
    }
    set filter(value) {
      this[filter$] = value;
    }
    get layout() {
      return this[layout$];
    }
    set layout(value) {
      this[layout$] = value;
    }
    get paint() {
      return this[paint$];
    }
    set paint(value) {
      this[paint$] = value;
    }
    get jsObject() {
      return symbol_layer_interop.SymbolLayerJsImpl.toJs(this);
    }
    get dict() {
      return T.MapOfString$dynamic().as(symbol_layer_interop.SymbolLayerJsImpl.toDict(this));
    }
  };
  (symbol_layer.SymbolLayer.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let metadata = opts && 'metadata' in opts ? opts.metadata : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let sourceLayer = opts && 'sourceLayer' in opts ? opts.sourceLayer : null;
    let minZoom = opts && 'minZoom' in opts ? opts.minZoom : null;
    let maxZoom = opts && 'maxZoom' in opts ? opts.maxZoom : null;
    let filter = opts && 'filter' in opts ? opts.filter : null;
    let layout = opts && 'layout' in opts ? opts.layout : null;
    let paint = opts && 'paint' in opts ? opts.paint : null;
    this[id$] = id;
    this[metadata$] = metadata;
    this[source$0] = source;
    this[sourceLayer$] = sourceLayer;
    this[minZoom$] = minZoom;
    this[maxZoom$] = maxZoom;
    this[filter$] = filter;
    this[layout$] = layout;
    this[paint$] = paint;
    ;
  }).prototype = symbol_layer.SymbolLayer.prototype;
  dart.addTypeTests(symbol_layer.SymbolLayer);
  dart.addTypeCaches(symbol_layer.SymbolLayer);
  dart.setLibraryUri(symbol_layer.SymbolLayer, I[20]);
  dart.setFieldSignature(symbol_layer.SymbolLayer, () => ({
    __proto__: dart.getFields(symbol_layer.SymbolLayer.__proto__),
    id: dart.fieldType(core.String),
    metadata: dart.fieldType(dart.nullable(core.String)),
    source: dart.fieldType(dart.dynamic),
    sourceLayer: dart.fieldType(dart.nullable(core.String)),
    minZoom: dart.fieldType(dart.nullable(core.num)),
    maxZoom: dart.fieldType(dart.nullable(core.num)),
    filter: dart.fieldType(dart.dynamic),
    layout: dart.fieldType(dart.nullable(symbol_layer.SymbolLayout)),
    paint: dart.fieldType(dart.nullable(symbol_layer.SymbolPaint))
  }));
  var iconOpacity$ = dart.privateName(symbol_layer, "SymbolPaint.iconOpacity");
  var iconColor$ = dart.privateName(symbol_layer, "SymbolPaint.iconColor");
  var iconHaloColor$ = dart.privateName(symbol_layer, "SymbolPaint.iconHaloColor");
  var iconHaloWidth$ = dart.privateName(symbol_layer, "SymbolPaint.iconHaloWidth");
  var iconHaloBlur$ = dart.privateName(symbol_layer, "SymbolPaint.iconHaloBlur");
  var iconTranslate$ = dart.privateName(symbol_layer, "SymbolPaint.iconTranslate");
  var iconTranslateAnchor$ = dart.privateName(symbol_layer, "SymbolPaint.iconTranslateAnchor");
  var textOpacity$ = dart.privateName(symbol_layer, "SymbolPaint.textOpacity");
  var textColor$ = dart.privateName(symbol_layer, "SymbolPaint.textColor");
  var textHaloColor$ = dart.privateName(symbol_layer, "SymbolPaint.textHaloColor");
  var textHaloWidth$ = dart.privateName(symbol_layer, "SymbolPaint.textHaloWidth");
  var textHaloBlur$ = dart.privateName(symbol_layer, "SymbolPaint.textHaloBlur");
  var textTranslate$ = dart.privateName(symbol_layer, "SymbolPaint.textTranslate");
  var textTranslateAnchor$ = dart.privateName(symbol_layer, "SymbolPaint.textTranslateAnchor");
  symbol_layer.SymbolPaint = class SymbolPaint extends core.Object {
    get iconOpacity() {
      return this[iconOpacity$];
    }
    set iconOpacity(value) {
      this[iconOpacity$] = value;
    }
    get iconColor() {
      return this[iconColor$];
    }
    set iconColor(value) {
      this[iconColor$] = value;
    }
    get iconHaloColor() {
      return this[iconHaloColor$];
    }
    set iconHaloColor(value) {
      this[iconHaloColor$] = value;
    }
    get iconHaloWidth() {
      return this[iconHaloWidth$];
    }
    set iconHaloWidth(value) {
      this[iconHaloWidth$] = value;
    }
    get iconHaloBlur() {
      return this[iconHaloBlur$];
    }
    set iconHaloBlur(value) {
      this[iconHaloBlur$] = value;
    }
    get iconTranslate() {
      return this[iconTranslate$];
    }
    set iconTranslate(value) {
      this[iconTranslate$] = value;
    }
    get iconTranslateAnchor() {
      return this[iconTranslateAnchor$];
    }
    set iconTranslateAnchor(value) {
      this[iconTranslateAnchor$] = value;
    }
    get textOpacity() {
      return this[textOpacity$];
    }
    set textOpacity(value) {
      this[textOpacity$] = value;
    }
    get textColor() {
      return this[textColor$];
    }
    set textColor(value) {
      this[textColor$] = value;
    }
    get textHaloColor() {
      return this[textHaloColor$];
    }
    set textHaloColor(value) {
      this[textHaloColor$] = value;
    }
    get textHaloWidth() {
      return this[textHaloWidth$];
    }
    set textHaloWidth(value) {
      this[textHaloWidth$] = value;
    }
    get textHaloBlur() {
      return this[textHaloBlur$];
    }
    set textHaloBlur(value) {
      this[textHaloBlur$] = value;
    }
    get textTranslate() {
      return this[textTranslate$];
    }
    set textTranslate(value) {
      this[textTranslate$] = value;
    }
    get textTranslateAnchor() {
      return this[textTranslateAnchor$];
    }
    set textTranslateAnchor(value) {
      this[textTranslateAnchor$] = value;
    }
    get jsObject() {
      return symbol_layer_interop.SymbolPaintJsImpl.toJs(this);
    }
    get dict() {
      return symbol_layer_interop.SymbolPaintJsImpl.toDict(this);
    }
  };
  (symbol_layer.SymbolPaint.new = function(opts) {
    let iconOpacity = opts && 'iconOpacity' in opts ? opts.iconOpacity : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let iconHaloColor = opts && 'iconHaloColor' in opts ? opts.iconHaloColor : null;
    let iconHaloWidth = opts && 'iconHaloWidth' in opts ? opts.iconHaloWidth : null;
    let iconHaloBlur = opts && 'iconHaloBlur' in opts ? opts.iconHaloBlur : null;
    let iconTranslate = opts && 'iconTranslate' in opts ? opts.iconTranslate : null;
    let iconTranslateAnchor = opts && 'iconTranslateAnchor' in opts ? opts.iconTranslateAnchor : null;
    let textOpacity = opts && 'textOpacity' in opts ? opts.textOpacity : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let textHaloColor = opts && 'textHaloColor' in opts ? opts.textHaloColor : null;
    let textHaloWidth = opts && 'textHaloWidth' in opts ? opts.textHaloWidth : null;
    let textHaloBlur = opts && 'textHaloBlur' in opts ? opts.textHaloBlur : null;
    let textTranslate = opts && 'textTranslate' in opts ? opts.textTranslate : null;
    let textTranslateAnchor = opts && 'textTranslateAnchor' in opts ? opts.textTranslateAnchor : null;
    this[iconOpacity$] = iconOpacity;
    this[iconColor$] = iconColor;
    this[iconHaloColor$] = iconHaloColor;
    this[iconHaloWidth$] = iconHaloWidth;
    this[iconHaloBlur$] = iconHaloBlur;
    this[iconTranslate$] = iconTranslate;
    this[iconTranslateAnchor$] = iconTranslateAnchor;
    this[textOpacity$] = textOpacity;
    this[textColor$] = textColor;
    this[textHaloColor$] = textHaloColor;
    this[textHaloWidth$] = textHaloWidth;
    this[textHaloBlur$] = textHaloBlur;
    this[textTranslate$] = textTranslate;
    this[textTranslateAnchor$] = textTranslateAnchor;
    ;
  }).prototype = symbol_layer.SymbolPaint.prototype;
  dart.addTypeTests(symbol_layer.SymbolPaint);
  dart.addTypeCaches(symbol_layer.SymbolPaint);
  dart.setGetterSignature(symbol_layer.SymbolPaint, () => ({
    __proto__: dart.getGetters(symbol_layer.SymbolPaint.__proto__),
    jsObject: dart.dynamic,
    dict: dart.dynamic
  }));
  dart.setLibraryUri(symbol_layer.SymbolPaint, I[20]);
  dart.setFieldSignature(symbol_layer.SymbolPaint, () => ({
    __proto__: dart.getFields(symbol_layer.SymbolPaint.__proto__),
    iconOpacity: dart.fieldType(dart.nullable(core.num)),
    iconColor: dart.fieldType(dart.nullable(core.String)),
    iconHaloColor: dart.fieldType(dart.nullable(core.String)),
    iconHaloWidth: dart.fieldType(dart.nullable(core.num)),
    iconHaloBlur: dart.fieldType(dart.nullable(core.num)),
    iconTranslate: dart.fieldType(dart.nullable(core.List$(core.num))),
    iconTranslateAnchor: dart.fieldType(dart.nullable(core.String)),
    textOpacity: dart.fieldType(dart.nullable(core.num)),
    textColor: dart.fieldType(dart.nullable(core.String)),
    textHaloColor: dart.fieldType(dart.nullable(core.String)),
    textHaloWidth: dart.fieldType(dart.nullable(core.num)),
    textHaloBlur: dart.fieldType(dart.nullable(core.num)),
    textTranslate: dart.fieldType(dart.nullable(core.List$(core.num))),
    textTranslateAnchor: dart.fieldType(dart.nullable(core.String))
  }));
  var symbolAvoidEdges$ = dart.privateName(symbol_layer, "SymbolLayout.symbolAvoidEdges");
  var symbolSortKey$ = dart.privateName(symbol_layer, "SymbolLayout.symbolSortKey");
  var symbolZOrder$ = dart.privateName(symbol_layer, "SymbolLayout.symbolZOrder");
  var iconAllowOverlap$ = dart.privateName(symbol_layer, "SymbolLayout.iconAllowOverlap");
  var iconIgnorePlacement$ = dart.privateName(symbol_layer, "SymbolLayout.iconIgnorePlacement");
  var iconOptional$ = dart.privateName(symbol_layer, "SymbolLayout.iconOptional");
  var iconRotationAlignment$ = dart.privateName(symbol_layer, "SymbolLayout.iconRotationAlignment");
  var iconSize$ = dart.privateName(symbol_layer, "SymbolLayout.iconSize");
  var iconTextFit$ = dart.privateName(symbol_layer, "SymbolLayout.iconTextFit");
  var iconFitPadding$ = dart.privateName(symbol_layer, "SymbolLayout.iconFitPadding");
  var iconImage$ = dart.privateName(symbol_layer, "SymbolLayout.iconImage");
  var iconRotate$ = dart.privateName(symbol_layer, "SymbolLayout.iconRotate");
  var iconPadding$ = dart.privateName(symbol_layer, "SymbolLayout.iconPadding");
  var iconKeepUpright$ = dart.privateName(symbol_layer, "SymbolLayout.iconKeepUpright");
  var iconOffset$ = dart.privateName(symbol_layer, "SymbolLayout.iconOffset");
  var iconAnchor$ = dart.privateName(symbol_layer, "SymbolLayout.iconAnchor");
  var iconPitchAlignment$ = dart.privateName(symbol_layer, "SymbolLayout.iconPitchAlignment");
  var textPitchAlignment$ = dart.privateName(symbol_layer, "SymbolLayout.textPitchAlignment");
  var textRotationAlignment$ = dart.privateName(symbol_layer, "SymbolLayout.textRotationAlignment");
  var textField$ = dart.privateName(symbol_layer, "SymbolLayout.textField");
  var textFont$ = dart.privateName(symbol_layer, "SymbolLayout.textFont");
  var textSize$ = dart.privateName(symbol_layer, "SymbolLayout.textSize");
  var textMaxWidth$ = dart.privateName(symbol_layer, "SymbolLayout.textMaxWidth");
  var textLineHeight$ = dart.privateName(symbol_layer, "SymbolLayout.textLineHeight");
  var textLetterSpacing$ = dart.privateName(symbol_layer, "SymbolLayout.textLetterSpacing");
  var textJustify$ = dart.privateName(symbol_layer, "SymbolLayout.textJustify");
  var textRadialOffset$ = dart.privateName(symbol_layer, "SymbolLayout.textRadialOffset");
  var textVariableAnchor$ = dart.privateName(symbol_layer, "SymbolLayout.textVariableAnchor");
  var textAnchor$ = dart.privateName(symbol_layer, "SymbolLayout.textAnchor");
  var textMaxAngle$ = dart.privateName(symbol_layer, "SymbolLayout.textMaxAngle");
  var textWritingMode$ = dart.privateName(symbol_layer, "SymbolLayout.textWritingMode");
  var textRotate$ = dart.privateName(symbol_layer, "SymbolLayout.textRotate");
  var textPadding$ = dart.privateName(symbol_layer, "SymbolLayout.textPadding");
  var textKeepUpright$ = dart.privateName(symbol_layer, "SymbolLayout.textKeepUpright");
  var textTransform$ = dart.privateName(symbol_layer, "SymbolLayout.textTransform");
  var textOffset$ = dart.privateName(symbol_layer, "SymbolLayout.textOffset");
  var textAllowOverlap$ = dart.privateName(symbol_layer, "SymbolLayout.textAllowOverlap");
  var textIgnorePlacement$ = dart.privateName(symbol_layer, "SymbolLayout.textIgnorePlacement");
  var textOptional$ = dart.privateName(symbol_layer, "SymbolLayout.textOptional");
  var visibility$ = dart.privateName(symbol_layer, "SymbolLayout.visibility");
  symbol_layer.SymbolLayout = class SymbolLayout extends core.Object {
    get symbolAvoidEdges() {
      return this[symbolAvoidEdges$];
    }
    set symbolAvoidEdges(value) {
      this[symbolAvoidEdges$] = value;
    }
    get symbolSortKey() {
      return this[symbolSortKey$];
    }
    set symbolSortKey(value) {
      this[symbolSortKey$] = value;
    }
    get symbolZOrder() {
      return this[symbolZOrder$];
    }
    set symbolZOrder(value) {
      this[symbolZOrder$] = value;
    }
    get iconAllowOverlap() {
      return this[iconAllowOverlap$];
    }
    set iconAllowOverlap(value) {
      this[iconAllowOverlap$] = value;
    }
    get iconIgnorePlacement() {
      return this[iconIgnorePlacement$];
    }
    set iconIgnorePlacement(value) {
      this[iconIgnorePlacement$] = value;
    }
    get iconOptional() {
      return this[iconOptional$];
    }
    set iconOptional(value) {
      this[iconOptional$] = value;
    }
    get iconRotationAlignment() {
      return this[iconRotationAlignment$];
    }
    set iconRotationAlignment(value) {
      this[iconRotationAlignment$] = value;
    }
    get iconSize() {
      return this[iconSize$];
    }
    set iconSize(value) {
      this[iconSize$] = value;
    }
    get iconTextFit() {
      return this[iconTextFit$];
    }
    set iconTextFit(value) {
      this[iconTextFit$] = value;
    }
    get iconFitPadding() {
      return this[iconFitPadding$];
    }
    set iconFitPadding(value) {
      this[iconFitPadding$] = value;
    }
    get iconImage() {
      return this[iconImage$];
    }
    set iconImage(value) {
      this[iconImage$] = value;
    }
    get iconRotate() {
      return this[iconRotate$];
    }
    set iconRotate(value) {
      this[iconRotate$] = value;
    }
    get iconPadding() {
      return this[iconPadding$];
    }
    set iconPadding(value) {
      this[iconPadding$] = value;
    }
    get iconKeepUpright() {
      return this[iconKeepUpright$];
    }
    set iconKeepUpright(value) {
      this[iconKeepUpright$] = value;
    }
    get iconOffset() {
      return this[iconOffset$];
    }
    set iconOffset(value) {
      this[iconOffset$] = value;
    }
    get iconAnchor() {
      return this[iconAnchor$];
    }
    set iconAnchor(value) {
      this[iconAnchor$] = value;
    }
    get iconPitchAlignment() {
      return this[iconPitchAlignment$];
    }
    set iconPitchAlignment(value) {
      this[iconPitchAlignment$] = value;
    }
    get textPitchAlignment() {
      return this[textPitchAlignment$];
    }
    set textPitchAlignment(value) {
      this[textPitchAlignment$] = value;
    }
    get textRotationAlignment() {
      return this[textRotationAlignment$];
    }
    set textRotationAlignment(value) {
      this[textRotationAlignment$] = value;
    }
    get textField() {
      return this[textField$];
    }
    set textField(value) {
      this[textField$] = value;
    }
    get textFont() {
      return this[textFont$];
    }
    set textFont(value) {
      this[textFont$] = value;
    }
    get textSize() {
      return this[textSize$];
    }
    set textSize(value) {
      this[textSize$] = value;
    }
    get textMaxWidth() {
      return this[textMaxWidth$];
    }
    set textMaxWidth(value) {
      this[textMaxWidth$] = value;
    }
    get textLineHeight() {
      return this[textLineHeight$];
    }
    set textLineHeight(value) {
      this[textLineHeight$] = value;
    }
    get textLetterSpacing() {
      return this[textLetterSpacing$];
    }
    set textLetterSpacing(value) {
      this[textLetterSpacing$] = value;
    }
    get textJustify() {
      return this[textJustify$];
    }
    set textJustify(value) {
      this[textJustify$] = value;
    }
    get textRadialOffset() {
      return this[textRadialOffset$];
    }
    set textRadialOffset(value) {
      this[textRadialOffset$] = value;
    }
    get textVariableAnchor() {
      return this[textVariableAnchor$];
    }
    set textVariableAnchor(value) {
      this[textVariableAnchor$] = value;
    }
    get textAnchor() {
      return this[textAnchor$];
    }
    set textAnchor(value) {
      this[textAnchor$] = value;
    }
    get textMaxAngle() {
      return this[textMaxAngle$];
    }
    set textMaxAngle(value) {
      this[textMaxAngle$] = value;
    }
    get textWritingMode() {
      return this[textWritingMode$];
    }
    set textWritingMode(value) {
      this[textWritingMode$] = value;
    }
    get textRotate() {
      return this[textRotate$];
    }
    set textRotate(value) {
      this[textRotate$] = value;
    }
    get textPadding() {
      return this[textPadding$];
    }
    set textPadding(value) {
      this[textPadding$] = value;
    }
    get textKeepUpright() {
      return this[textKeepUpright$];
    }
    set textKeepUpright(value) {
      this[textKeepUpright$] = value;
    }
    get textTransform() {
      return this[textTransform$];
    }
    set textTransform(value) {
      this[textTransform$] = value;
    }
    get textOffset() {
      return this[textOffset$];
    }
    set textOffset(value) {
      this[textOffset$] = value;
    }
    get textAllowOverlap() {
      return this[textAllowOverlap$];
    }
    set textAllowOverlap(value) {
      this[textAllowOverlap$] = value;
    }
    get textIgnorePlacement() {
      return this[textIgnorePlacement$];
    }
    set textIgnorePlacement(value) {
      this[textIgnorePlacement$] = value;
    }
    get textOptional() {
      return this[textOptional$];
    }
    set textOptional(value) {
      this[textOptional$] = value;
    }
    get visibility() {
      return this[visibility$];
    }
    set visibility(value) {
      this[visibility$] = value;
    }
    get jsObject() {
      return symbol_layer_interop.SymbolLayoutJsImpl.toJs(this);
    }
    get dict() {
      return symbol_layer_interop.SymbolLayoutJsImpl.toDict(this);
    }
  };
  (symbol_layer.SymbolLayout.new = function(opts) {
    let symbolAvoidEdges = opts && 'symbolAvoidEdges' in opts ? opts.symbolAvoidEdges : null;
    let symbolSortKey = opts && 'symbolSortKey' in opts ? opts.symbolSortKey : null;
    let symbolZOrder = opts && 'symbolZOrder' in opts ? opts.symbolZOrder : null;
    let iconAllowOverlap = opts && 'iconAllowOverlap' in opts ? opts.iconAllowOverlap : null;
    let iconIgnorePlacement = opts && 'iconIgnorePlacement' in opts ? opts.iconIgnorePlacement : null;
    let iconOptional = opts && 'iconOptional' in opts ? opts.iconOptional : null;
    let iconRotationAlignment = opts && 'iconRotationAlignment' in opts ? opts.iconRotationAlignment : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
    let iconTextFit = opts && 'iconTextFit' in opts ? opts.iconTextFit : null;
    let iconFitPadding = opts && 'iconFitPadding' in opts ? opts.iconFitPadding : null;
    let iconImage = opts && 'iconImage' in opts ? opts.iconImage : null;
    let iconRotate = opts && 'iconRotate' in opts ? opts.iconRotate : null;
    let iconPadding = opts && 'iconPadding' in opts ? opts.iconPadding : null;
    let iconKeepUpright = opts && 'iconKeepUpright' in opts ? opts.iconKeepUpright : null;
    let iconOffset = opts && 'iconOffset' in opts ? opts.iconOffset : null;
    let iconAnchor = opts && 'iconAnchor' in opts ? opts.iconAnchor : null;
    let iconPitchAlignment = opts && 'iconPitchAlignment' in opts ? opts.iconPitchAlignment : null;
    let textPitchAlignment = opts && 'textPitchAlignment' in opts ? opts.textPitchAlignment : null;
    let textRotationAlignment = opts && 'textRotationAlignment' in opts ? opts.textRotationAlignment : null;
    let textField = opts && 'textField' in opts ? opts.textField : null;
    let textFont = opts && 'textFont' in opts ? opts.textFont : null;
    let textSize = opts && 'textSize' in opts ? opts.textSize : null;
    let textMaxWidth = opts && 'textMaxWidth' in opts ? opts.textMaxWidth : null;
    let textLineHeight = opts && 'textLineHeight' in opts ? opts.textLineHeight : null;
    let textLetterSpacing = opts && 'textLetterSpacing' in opts ? opts.textLetterSpacing : null;
    let textJustify = opts && 'textJustify' in opts ? opts.textJustify : null;
    let textRadialOffset = opts && 'textRadialOffset' in opts ? opts.textRadialOffset : null;
    let textVariableAnchor = opts && 'textVariableAnchor' in opts ? opts.textVariableAnchor : null;
    let textAnchor = opts && 'textAnchor' in opts ? opts.textAnchor : null;
    let textMaxAngle = opts && 'textMaxAngle' in opts ? opts.textMaxAngle : null;
    let textWritingMode = opts && 'textWritingMode' in opts ? opts.textWritingMode : null;
    let textRotate = opts && 'textRotate' in opts ? opts.textRotate : null;
    let textPadding = opts && 'textPadding' in opts ? opts.textPadding : null;
    let textKeepUpright = opts && 'textKeepUpright' in opts ? opts.textKeepUpright : null;
    let textTransform = opts && 'textTransform' in opts ? opts.textTransform : null;
    let textOffset = opts && 'textOffset' in opts ? opts.textOffset : null;
    let textAllowOverlap = opts && 'textAllowOverlap' in opts ? opts.textAllowOverlap : null;
    let textIgnorePlacement = opts && 'textIgnorePlacement' in opts ? opts.textIgnorePlacement : null;
    let textOptional = opts && 'textOptional' in opts ? opts.textOptional : null;
    let visibility = opts && 'visibility' in opts ? opts.visibility : null;
    this[symbolAvoidEdges$] = symbolAvoidEdges;
    this[symbolSortKey$] = symbolSortKey;
    this[symbolZOrder$] = symbolZOrder;
    this[iconAllowOverlap$] = iconAllowOverlap;
    this[iconIgnorePlacement$] = iconIgnorePlacement;
    this[iconOptional$] = iconOptional;
    this[iconRotationAlignment$] = iconRotationAlignment;
    this[iconSize$] = iconSize;
    this[iconTextFit$] = iconTextFit;
    this[iconFitPadding$] = iconFitPadding;
    this[iconImage$] = iconImage;
    this[iconRotate$] = iconRotate;
    this[iconPadding$] = iconPadding;
    this[iconKeepUpright$] = iconKeepUpright;
    this[iconOffset$] = iconOffset;
    this[iconAnchor$] = iconAnchor;
    this[iconPitchAlignment$] = iconPitchAlignment;
    this[textPitchAlignment$] = textPitchAlignment;
    this[textRotationAlignment$] = textRotationAlignment;
    this[textField$] = textField;
    this[textFont$] = textFont;
    this[textSize$] = textSize;
    this[textMaxWidth$] = textMaxWidth;
    this[textLineHeight$] = textLineHeight;
    this[textLetterSpacing$] = textLetterSpacing;
    this[textJustify$] = textJustify;
    this[textRadialOffset$] = textRadialOffset;
    this[textVariableAnchor$] = textVariableAnchor;
    this[textAnchor$] = textAnchor;
    this[textMaxAngle$] = textMaxAngle;
    this[textWritingMode$] = textWritingMode;
    this[textRotate$] = textRotate;
    this[textPadding$] = textPadding;
    this[textKeepUpright$] = textKeepUpright;
    this[textTransform$] = textTransform;
    this[textOffset$] = textOffset;
    this[textAllowOverlap$] = textAllowOverlap;
    this[textIgnorePlacement$] = textIgnorePlacement;
    this[textOptional$] = textOptional;
    this[visibility$] = visibility;
    ;
  }).prototype = symbol_layer.SymbolLayout.prototype;
  dart.addTypeTests(symbol_layer.SymbolLayout);
  dart.addTypeCaches(symbol_layer.SymbolLayout);
  dart.setGetterSignature(symbol_layer.SymbolLayout, () => ({
    __proto__: dart.getGetters(symbol_layer.SymbolLayout.__proto__),
    jsObject: dart.dynamic,
    dict: dart.dynamic
  }));
  dart.setLibraryUri(symbol_layer.SymbolLayout, I[20]);
  dart.setFieldSignature(symbol_layer.SymbolLayout, () => ({
    __proto__: dart.getFields(symbol_layer.SymbolLayout.__proto__),
    symbolAvoidEdges: dart.fieldType(dart.nullable(core.bool)),
    symbolSortKey: dart.fieldType(dart.nullable(core.num)),
    symbolZOrder: dart.fieldType(dart.nullable(core.String)),
    iconAllowOverlap: dart.fieldType(dart.nullable(core.bool)),
    iconIgnorePlacement: dart.fieldType(dart.nullable(core.bool)),
    iconOptional: dart.fieldType(dart.nullable(core.bool)),
    iconRotationAlignment: dart.fieldType(dart.nullable(core.String)),
    iconSize: dart.fieldType(dart.nullable(core.num)),
    iconTextFit: dart.fieldType(dart.nullable(core.String)),
    iconFitPadding: dart.fieldType(dart.nullable(core.List$(core.num))),
    iconImage: dart.fieldType(dart.dynamic),
    iconRotate: dart.fieldType(dart.nullable(core.num)),
    iconPadding: dart.fieldType(dart.nullable(core.num)),
    iconKeepUpright: dart.fieldType(dart.nullable(core.bool)),
    iconOffset: dart.fieldType(dart.nullable(core.List$(core.num))),
    iconAnchor: dart.fieldType(dart.nullable(core.String)),
    iconPitchAlignment: dart.fieldType(dart.nullable(core.String)),
    textPitchAlignment: dart.fieldType(dart.nullable(core.String)),
    textRotationAlignment: dart.fieldType(dart.nullable(core.String)),
    textField: dart.fieldType(dart.nullable(core.String)),
    textFont: dart.fieldType(dart.nullable(core.List$(core.String))),
    textSize: dart.fieldType(dart.nullable(core.num)),
    textMaxWidth: dart.fieldType(dart.nullable(core.num)),
    textLineHeight: dart.fieldType(dart.nullable(core.num)),
    textLetterSpacing: dart.fieldType(dart.nullable(core.num)),
    textJustify: dart.fieldType(dart.nullable(core.String)),
    textRadialOffset: dart.fieldType(dart.nullable(core.num)),
    textVariableAnchor: dart.fieldType(dart.nullable(core.List$(core.String))),
    textAnchor: dart.fieldType(dart.nullable(core.String)),
    textMaxAngle: dart.fieldType(dart.nullable(core.num)),
    textWritingMode: dart.fieldType(dart.nullable(core.List$(core.String))),
    textRotate: dart.fieldType(dart.nullable(core.num)),
    textPadding: dart.fieldType(dart.nullable(core.num)),
    textKeepUpright: dart.fieldType(dart.nullable(core.bool)),
    textTransform: dart.fieldType(dart.nullable(core.String)),
    textOffset: dart.fieldType(dart.nullable(core.List$(core.num))),
    textAllowOverlap: dart.fieldType(dart.nullable(core.bool)),
    textIgnorePlacement: dart.fieldType(dart.nullable(core.bool)),
    textOptional: dart.fieldType(dart.nullable(core.bool)),
    visibility: dart.fieldType(dart.nullable(core.String))
  }));
  var id$0 = dart.privateName(line_layer, "LineLayer.id");
  var source$1 = dart.privateName(line_layer, "LineLayer.source");
  var sourceLayer$0 = dart.privateName(line_layer, "LineLayer.sourceLayer");
  var paint$0 = dart.privateName(line_layer, "LineLayer.paint");
  var layout$0 = dart.privateName(line_layer, "LineLayer.layout");
  var filter$0 = dart.privateName(line_layer, "LineLayer.filter");
  line_layer.LineLayer = class LineLayer extends layer$.Layer {
    get id() {
      return this[id$0];
    }
    set id(value) {
      this[id$0] = value;
    }
    get source() {
      return this[source$1];
    }
    set source(value) {
      this[source$1] = value;
    }
    get sourceLayer() {
      return this[sourceLayer$0];
    }
    set sourceLayer(value) {
      this[sourceLayer$0] = value;
    }
    get paint() {
      return this[paint$0];
    }
    set paint(value) {
      this[paint$0] = value;
    }
    get layout() {
      return this[layout$0];
    }
    set layout(value) {
      this[layout$0] = value;
    }
    get filter() {
      return this[filter$0];
    }
    set filter(value) {
      this[filter$0] = value;
    }
    get jsObject() {
      return line_layer_interop.LineLayerJsImpl.toJs(this);
    }
    get dict() {
      return T.MapOfString$dynamic().as(line_layer_interop.LineLayerJsImpl.toDict(this));
    }
  };
  (line_layer.LineLayer.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let sourceLayer = opts && 'sourceLayer' in opts ? opts.sourceLayer : null;
    let paint = opts && 'paint' in opts ? opts.paint : null;
    let layout = opts && 'layout' in opts ? opts.layout : null;
    let filter = opts && 'filter' in opts ? opts.filter : null;
    this[id$0] = id;
    this[source$1] = source;
    this[sourceLayer$0] = sourceLayer;
    this[paint$0] = paint;
    this[layout$0] = layout;
    this[filter$0] = filter;
    ;
  }).prototype = line_layer.LineLayer.prototype;
  dart.addTypeTests(line_layer.LineLayer);
  dart.addTypeCaches(line_layer.LineLayer);
  dart.setLibraryUri(line_layer.LineLayer, I[21]);
  dart.setFieldSignature(line_layer.LineLayer, () => ({
    __proto__: dart.getFields(line_layer.LineLayer.__proto__),
    id: dart.fieldType(core.String),
    source: dart.fieldType(dart.dynamic),
    sourceLayer: dart.fieldType(dart.nullable(core.String)),
    paint: dart.fieldType(dart.nullable(line_layer.LinePaint)),
    layout: dart.fieldType(dart.nullable(line_layer.LineLayout)),
    filter: dart.fieldType(dart.dynamic)
  }));
  var lineOpacity$ = dart.privateName(line_layer, "LinePaint.lineOpacity");
  var lineColor$ = dart.privateName(line_layer, "LinePaint.lineColor");
  var lineTranslate$ = dart.privateName(line_layer, "LinePaint.lineTranslate");
  var lineTranslateAnchor$ = dart.privateName(line_layer, "LinePaint.lineTranslateAnchor");
  var lineWidth$ = dart.privateName(line_layer, "LinePaint.lineWidth");
  var lineGapWidth$ = dart.privateName(line_layer, "LinePaint.lineGapWidth");
  var lineOffset$ = dart.privateName(line_layer, "LinePaint.lineOffset");
  var lineBlur$ = dart.privateName(line_layer, "LinePaint.lineBlur");
  var lineDasharray$ = dart.privateName(line_layer, "LinePaint.lineDasharray");
  var linePattern$ = dart.privateName(line_layer, "LinePaint.linePattern");
  var lineGradient$ = dart.privateName(line_layer, "LinePaint.lineGradient");
  line_layer.LinePaint = class LinePaint extends core.Object {
    get lineOpacity() {
      return this[lineOpacity$];
    }
    set lineOpacity(value) {
      this[lineOpacity$] = value;
    }
    get lineColor() {
      return this[lineColor$];
    }
    set lineColor(value) {
      this[lineColor$] = value;
    }
    get lineTranslate() {
      return this[lineTranslate$];
    }
    set lineTranslate(value) {
      this[lineTranslate$] = value;
    }
    get lineTranslateAnchor() {
      return this[lineTranslateAnchor$];
    }
    set lineTranslateAnchor(value) {
      this[lineTranslateAnchor$] = value;
    }
    get lineWidth() {
      return this[lineWidth$];
    }
    set lineWidth(value) {
      this[lineWidth$] = value;
    }
    get lineGapWidth() {
      return this[lineGapWidth$];
    }
    set lineGapWidth(value) {
      this[lineGapWidth$] = value;
    }
    get lineOffset() {
      return this[lineOffset$];
    }
    set lineOffset(value) {
      this[lineOffset$] = value;
    }
    get lineBlur() {
      return this[lineBlur$];
    }
    set lineBlur(value) {
      this[lineBlur$] = value;
    }
    get lineDasharray() {
      return this[lineDasharray$];
    }
    set lineDasharray(value) {
      this[lineDasharray$] = value;
    }
    get linePattern() {
      return this[linePattern$];
    }
    set linePattern(value) {
      this[linePattern$] = value;
    }
    get lineGradient() {
      return this[lineGradient$];
    }
    set lineGradient(value) {
      this[lineGradient$] = value;
    }
    get jsObject() {
      return line_layer_interop.LinePaintJsImpl.toJs(this);
    }
    get dict() {
      return line_layer_interop.LinePaintJsImpl.toDict(this);
    }
  };
  (line_layer.LinePaint.new = function(opts) {
    let lineOpacity = opts && 'lineOpacity' in opts ? opts.lineOpacity : null;
    let lineColor = opts && 'lineColor' in opts ? opts.lineColor : null;
    let lineTranslate = opts && 'lineTranslate' in opts ? opts.lineTranslate : null;
    let lineTranslateAnchor = opts && 'lineTranslateAnchor' in opts ? opts.lineTranslateAnchor : null;
    let lineWidth = opts && 'lineWidth' in opts ? opts.lineWidth : null;
    let lineGapWidth = opts && 'lineGapWidth' in opts ? opts.lineGapWidth : null;
    let lineOffset = opts && 'lineOffset' in opts ? opts.lineOffset : null;
    let lineBlur = opts && 'lineBlur' in opts ? opts.lineBlur : null;
    let lineDasharray = opts && 'lineDasharray' in opts ? opts.lineDasharray : null;
    let linePattern = opts && 'linePattern' in opts ? opts.linePattern : null;
    let lineGradient = opts && 'lineGradient' in opts ? opts.lineGradient : null;
    this[lineOpacity$] = lineOpacity;
    this[lineColor$] = lineColor;
    this[lineTranslate$] = lineTranslate;
    this[lineTranslateAnchor$] = lineTranslateAnchor;
    this[lineWidth$] = lineWidth;
    this[lineGapWidth$] = lineGapWidth;
    this[lineOffset$] = lineOffset;
    this[lineBlur$] = lineBlur;
    this[lineDasharray$] = lineDasharray;
    this[linePattern$] = linePattern;
    this[lineGradient$] = lineGradient;
    ;
  }).prototype = line_layer.LinePaint.prototype;
  dart.addTypeTests(line_layer.LinePaint);
  dart.addTypeCaches(line_layer.LinePaint);
  dart.setGetterSignature(line_layer.LinePaint, () => ({
    __proto__: dart.getGetters(line_layer.LinePaint.__proto__),
    jsObject: dart.dynamic,
    dict: dart.dynamic
  }));
  dart.setLibraryUri(line_layer.LinePaint, I[21]);
  dart.setFieldSignature(line_layer.LinePaint, () => ({
    __proto__: dart.getFields(line_layer.LinePaint.__proto__),
    lineOpacity: dart.fieldType(dart.nullable(core.num)),
    lineColor: dart.fieldType(dart.dynamic),
    lineTranslate: dart.fieldType(dart.nullable(core.List$(core.num))),
    lineTranslateAnchor: dart.fieldType(dart.nullable(core.String)),
    lineWidth: dart.fieldType(dart.dynamic),
    lineGapWidth: dart.fieldType(dart.nullable(core.num)),
    lineOffset: dart.fieldType(dart.nullable(core.num)),
    lineBlur: dart.fieldType(dart.nullable(core.num)),
    lineDasharray: dart.fieldType(dart.nullable(core.List$(core.num))),
    linePattern: dart.fieldType(dart.nullable(core.String)),
    lineGradient: dart.fieldType(dart.nullable(core.String))
  }));
  var lineCap$ = dart.privateName(line_layer, "LineLayout.lineCap");
  var lineJoin$ = dart.privateName(line_layer, "LineLayout.lineJoin");
  var lineMiterLimit$ = dart.privateName(line_layer, "LineLayout.lineMiterLimit");
  var lineRoundLimit$ = dart.privateName(line_layer, "LineLayout.lineRoundLimit");
  var lineSortKey$ = dart.privateName(line_layer, "LineLayout.lineSortKey");
  var visibility$0 = dart.privateName(line_layer, "LineLayout.visibility");
  line_layer.LineLayout = class LineLayout extends core.Object {
    get lineCap() {
      return this[lineCap$];
    }
    set lineCap(value) {
      this[lineCap$] = value;
    }
    get lineJoin() {
      return this[lineJoin$];
    }
    set lineJoin(value) {
      this[lineJoin$] = value;
    }
    get lineMiterLimit() {
      return this[lineMiterLimit$];
    }
    set lineMiterLimit(value) {
      this[lineMiterLimit$] = value;
    }
    get lineRoundLimit() {
      return this[lineRoundLimit$];
    }
    set lineRoundLimit(value) {
      this[lineRoundLimit$] = value;
    }
    get lineSortKey() {
      return this[lineSortKey$];
    }
    set lineSortKey(value) {
      this[lineSortKey$] = value;
    }
    get visibility() {
      return this[visibility$0];
    }
    set visibility(value) {
      this[visibility$0] = value;
    }
    get jsObject() {
      return line_layer_interop.LineLayoutJsImpl.toJs(this);
    }
    get dict() {
      return line_layer_interop.LineLayoutJsImpl.toDict(this);
    }
  };
  (line_layer.LineLayout.new = function(opts) {
    let lineCap = opts && 'lineCap' in opts ? opts.lineCap : null;
    let lineJoin = opts && 'lineJoin' in opts ? opts.lineJoin : null;
    let lineMiterLimit = opts && 'lineMiterLimit' in opts ? opts.lineMiterLimit : null;
    let lineRoundLimit = opts && 'lineRoundLimit' in opts ? opts.lineRoundLimit : null;
    let lineSortKey = opts && 'lineSortKey' in opts ? opts.lineSortKey : null;
    let visibility = opts && 'visibility' in opts ? opts.visibility : null;
    this[lineCap$] = lineCap;
    this[lineJoin$] = lineJoin;
    this[lineMiterLimit$] = lineMiterLimit;
    this[lineRoundLimit$] = lineRoundLimit;
    this[lineSortKey$] = lineSortKey;
    this[visibility$0] = visibility;
    ;
  }).prototype = line_layer.LineLayout.prototype;
  dart.addTypeTests(line_layer.LineLayout);
  dart.addTypeCaches(line_layer.LineLayout);
  dart.setGetterSignature(line_layer.LineLayout, () => ({
    __proto__: dart.getGetters(line_layer.LineLayout.__proto__),
    jsObject: dart.dynamic,
    dict: dart.dynamic
  }));
  dart.setLibraryUri(line_layer.LineLayout, I[21]);
  dart.setFieldSignature(line_layer.LineLayout, () => ({
    __proto__: dart.getFields(line_layer.LineLayout.__proto__),
    lineCap: dart.fieldType(dart.nullable(core.String)),
    lineJoin: dart.fieldType(dart.nullable(core.String)),
    lineMiterLimit: dart.fieldType(dart.nullable(core.num)),
    lineRoundLimit: dart.fieldType(dart.nullable(core.num)),
    lineSortKey: dart.fieldType(dart.nullable(core.num)),
    visibility: dart.fieldType(dart.nullable(core.String))
  }));
  var id$1 = dart.privateName(circle_layer, "CircleLayer.id");
  var source$2 = dart.privateName(circle_layer, "CircleLayer.source");
  var paint$1 = dart.privateName(circle_layer, "CircleLayer.paint");
  var sourceLayer$1 = dart.privateName(circle_layer, "CircleLayer.sourceLayer");
  circle_layer.CircleLayer = class CircleLayer extends layer$.Layer {
    get id() {
      return this[id$1];
    }
    set id(value) {
      this[id$1] = value;
    }
    get source() {
      return this[source$2];
    }
    set source(value) {
      this[source$2] = value;
    }
    get paint() {
      return this[paint$1];
    }
    set paint(value) {
      this[paint$1] = value;
    }
    get sourceLayer() {
      return this[sourceLayer$1];
    }
    set sourceLayer(value) {
      this[sourceLayer$1] = value;
    }
    get jsObject() {
      return circle_layer_interop.CircleLayerJsImpl.toJs(this);
    }
    get dict() {
      return T.MapOfString$dynamic().as(circle_layer_interop.CircleLayerJsImpl.toDict(this));
    }
  };
  (circle_layer.CircleLayer.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let paint = opts && 'paint' in opts ? opts.paint : null;
    let sourceLayer = opts && 'sourceLayer' in opts ? opts.sourceLayer : null;
    this[id$1] = id;
    this[source$2] = source;
    this[paint$1] = paint;
    this[sourceLayer$1] = sourceLayer;
    ;
  }).prototype = circle_layer.CircleLayer.prototype;
  dart.addTypeTests(circle_layer.CircleLayer);
  dart.addTypeCaches(circle_layer.CircleLayer);
  dart.setLibraryUri(circle_layer.CircleLayer, I[22]);
  dart.setFieldSignature(circle_layer.CircleLayer, () => ({
    __proto__: dart.getFields(circle_layer.CircleLayer.__proto__),
    id: dart.fieldType(core.String),
    source: dart.fieldType(dart.dynamic),
    paint: dart.fieldType(dart.nullable(circle_layer.CirclePaint)),
    sourceLayer: dart.fieldType(dart.dynamic)
  }));
  var circleRadius$ = dart.privateName(circle_layer, "CirclePaint.circleRadius");
  var circleColor$ = dart.privateName(circle_layer, "CirclePaint.circleColor");
  circle_layer.CirclePaint = class CirclePaint extends core.Object {
    get circleRadius() {
      return this[circleRadius$];
    }
    set circleRadius(value) {
      this[circleRadius$] = value;
    }
    get circleColor() {
      return this[circleColor$];
    }
    set circleColor(value) {
      this[circleColor$] = value;
    }
    get jsObject() {
      return circle_layer_interop.CirclePaintJsImpl.toJs(this);
    }
    get dict() {
      return circle_layer_interop.CirclePaintJsImpl.toDict(this);
    }
  };
  (circle_layer.CirclePaint.new = function(opts) {
    let circleRadius = opts && 'circleRadius' in opts ? opts.circleRadius : null;
    let circleColor = opts && 'circleColor' in opts ? opts.circleColor : null;
    this[circleRadius$] = circleRadius;
    this[circleColor$] = circleColor;
    ;
  }).prototype = circle_layer.CirclePaint.prototype;
  dart.addTypeTests(circle_layer.CirclePaint);
  dart.addTypeCaches(circle_layer.CirclePaint);
  dart.setGetterSignature(circle_layer.CirclePaint, () => ({
    __proto__: dart.getGetters(circle_layer.CirclePaint.__proto__),
    jsObject: dart.dynamic,
    dict: dart.dynamic
  }));
  dart.setLibraryUri(circle_layer.CirclePaint, I[22]);
  dart.setFieldSignature(circle_layer.CirclePaint, () => ({
    __proto__: dart.getFields(circle_layer.CirclePaint.__proto__),
    circleRadius: dart.fieldType(dart.dynamic),
    circleColor: dart.fieldType(dart.dynamic)
  }));
  evaluation_parameters.EvaluationParameters = class EvaluationParameters extends js$.JsObjectWrapper$(dart.lazyJSType(() => dart.global.mapboxgl.EvaluationParameters, "mapboxgl.EvaluationParameters")) {
    get zoom() {
      return this.jsObject.zoom;
    }
    get now() {
      return this.jsObject.now;
    }
    get fadeDuration() {
      return this.jsObject.fadeDuration;
    }
    get zoomHistory() {
      return this.jsObject.zoomHistory;
    }
    get transition() {
      return this.jsObject.transition;
    }
    static new(zoom, options = null) {
      return new evaluation_parameters.EvaluationParameters.fromJsObject(new dart.global.mapboxgl.EvaluationParameters(zoom, options));
    }
    isSupportedScript(str) {
      return this.jsObject.isSupportedScript(str);
    }
    crossFadingFactor() {
      return this.jsObject.crossFadingFactor();
    }
    getCrossfadeParameters() {
      return this.jsObject.getCrossfadeParameters();
    }
  };
  (evaluation_parameters.EvaluationParameters.fromJsObject = function(jsObject) {
    evaluation_parameters.EvaluationParameters.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = evaluation_parameters.EvaluationParameters.prototype;
  dart.addTypeTests(evaluation_parameters.EvaluationParameters);
  dart.addTypeCaches(evaluation_parameters.EvaluationParameters);
  dart.setMethodSignature(evaluation_parameters.EvaluationParameters, () => ({
    __proto__: dart.getMethods(evaluation_parameters.EvaluationParameters.__proto__),
    isSupportedScript: dart.fnType(core.bool, [core.String]),
    crossFadingFactor: dart.fnType(dart.dynamic, []),
    getCrossfadeParameters: dart.fnType(dart.dynamic, [])
  }));
  dart.setGetterSignature(evaluation_parameters.EvaluationParameters, () => ({
    __proto__: dart.getGetters(evaluation_parameters.EvaluationParameters.__proto__),
    zoom: core.num,
    now: core.num,
    fadeDuration: core.num,
    zoomHistory: dart.dynamic,
    transition: dart.dynamic
  }));
  dart.setLibraryUri(evaluation_parameters.EvaluationParameters, I[23]);
  point.Point = class Point extends js$.JsObjectWrapper$(dart.anonymousJSType("PointJsImpl")) {
    get x() {
      return this.jsObject.x;
    }
    get y() {
      return this.jsObject.y;
    }
    static new(x, y) {
      return new point.Point.fromJsObject({x: x, y: y});
    }
  };
  (point.Point.fromJsObject = function(jsObject) {
    point.Point.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = point.Point.prototype;
  dart.addTypeTests(point.Point);
  dart.addTypeCaches(point.Point);
  dart.setGetterSignature(point.Point, () => ({
    __proto__: dart.getGetters(point.Point.__proto__),
    x: core.num,
    y: core.num
  }));
  dart.setLibraryUri(point.Point, I[24]);
  lng_lat_bounds.LngLatBounds = class LngLatBounds extends js$.JsObjectWrapper$(dart.lazyJSType(() => dart.global.mapboxgl.LngLatBounds, "mapboxgl.LngLatBounds")) {
    static new(sw, ne) {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(new dart.global.mapboxgl.LngLatBounds(sw.jsObject, ne.jsObject));
    }
    setNorthEast(ne) {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(this.jsObject.setNorthEast(ne.jsObject));
    }
    setSouthWest(sw) {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(this.jsObject.setSouthWest(sw.jsObject));
    }
    extend(obj) {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(this.jsObject.extend(dart.dload(obj, 'jsObject')));
    }
    getCenter() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.getCenter());
    }
    getSouthWest() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.getSouthWest());
    }
    getNorthEast() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.getNorthEast());
    }
    getNorthWest() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.getNorthWest());
    }
    getSouthEast() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.getSouthEast());
    }
    getWest() {
      return this.jsObject.getWest();
    }
    getSouth() {
      return this.jsObject.getSouth();
    }
    getEast() {
      return this.jsObject.getEast();
    }
    getNorth() {
      return this.jsObject.getNorth();
    }
    toArray() {
      return this.jsObject.toArray();
    }
    toString() {
      return this.jsObject.toString();
    }
    isEmpty() {
      return this.jsObject.isEmpty();
    }
    contains(lnglat) {
      return this.jsObject.contains(lnglat.jsObject);
    }
    static convert(input) {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(dart.global.mapboxgl.LngLatBounds.convert(input));
    }
  };
  (lng_lat_bounds.LngLatBounds.fromJsObject = function(jsObject) {
    lng_lat_bounds.LngLatBounds.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = lng_lat_bounds.LngLatBounds.prototype;
  dart.addTypeTests(lng_lat_bounds.LngLatBounds);
  dart.addTypeCaches(lng_lat_bounds.LngLatBounds);
  dart.setMethodSignature(lng_lat_bounds.LngLatBounds, () => ({
    __proto__: dart.getMethods(lng_lat_bounds.LngLatBounds.__proto__),
    setNorthEast: dart.fnType(lng_lat_bounds.LngLatBounds, [lng_lat.LngLat]),
    setSouthWest: dart.fnType(lng_lat_bounds.LngLatBounds, [lng_lat.LngLat]),
    extend: dart.fnType(lng_lat_bounds.LngLatBounds, [dart.dynamic]),
    getCenter: dart.fnType(lng_lat.LngLat, []),
    getSouthWest: dart.fnType(lng_lat.LngLat, []),
    getNorthEast: dart.fnType(lng_lat.LngLat, []),
    getNorthWest: dart.fnType(lng_lat.LngLat, []),
    getSouthEast: dart.fnType(lng_lat.LngLat, []),
    getWest: dart.fnType(core.num, []),
    getSouth: dart.fnType(core.num, []),
    getEast: dart.fnType(core.num, []),
    getNorth: dart.fnType(core.num, []),
    toArray: dart.fnType(core.List$(core.List$(core.num)), []),
    isEmpty: dart.fnType(core.bool, []),
    contains: dart.fnType(core.bool, [lng_lat.LngLat])
  }));
  dart.setLibraryUri(lng_lat_bounds.LngLatBounds, I[25]);
  dart.defineExtensionMethods(lng_lat_bounds.LngLatBounds, ['toString']);
  lng_lat.LngLat = class LngLat extends js$.JsObjectWrapper$(dart.lazyJSType(() => dart.global.mapboxgl.LngLat, "mapboxgl.LngLat")) {
    get lng() {
      return this.jsObject.lng;
    }
    get lat() {
      return this.jsObject.lat;
    }
    static new(lng, lat) {
      return new lng_lat.LngLat.fromJsObject(new dart.global.mapboxgl.LngLat(lng, lat));
    }
    wrap() {
      return new lng_lat.LngLat.fromJsObject(this.jsObject.wrap());
    }
    toArray() {
      return this.jsObject.toArray();
    }
    toString() {
      return this.jsObject.toString();
    }
    toBounds(radius) {
      return new lng_lat_bounds.LngLatBounds.fromJsObject(this.jsObject.toBounds(radius));
    }
    static convert(input) {
      return new lng_lat.LngLat.fromJsObject(dart.global.mapboxgl.LngLat.convert(input));
    }
  };
  (lng_lat.LngLat.fromJsObject = function(jsObject) {
    lng_lat.LngLat.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = lng_lat.LngLat.prototype;
  dart.addTypeTests(lng_lat.LngLat);
  dart.addTypeCaches(lng_lat.LngLat);
  dart.setMethodSignature(lng_lat.LngLat, () => ({
    __proto__: dart.getMethods(lng_lat.LngLat.__proto__),
    wrap: dart.fnType(lng_lat.LngLat, []),
    toArray: dart.fnType(core.List$(core.num), []),
    toBounds: dart.fnType(lng_lat_bounds.LngLatBounds, [core.num])
  }));
  dart.setGetterSignature(lng_lat.LngLat, () => ({
    __proto__: dart.getGetters(lng_lat.LngLat.__proto__),
    lng: core.num,
    lat: core.num
  }));
  dart.setLibraryUri(lng_lat.LngLat, I[26]);
  dart.defineExtensionMethods(lng_lat.LngLat, ['toString']);
  symbol_layer_interop.SymbolLayerJsImpl = class SymbolLayerJsImpl extends core.Object {
    static toJs(symbolLayer) {
      return js_util.jsify(core.Object.as(symbol_layer_interop.SymbolLayerJsImpl.toDict(symbolLayer)));
    }
    static toDict(symbolLayer) {
      let dict = new (T.IdentityMapOfString$dynamic()).from(["id", symbolLayer.id, "type", "symbol"]);
      if (symbolLayer.metadata != null) {
        dict[$_set]("metadata", symbolLayer.metadata);
      }
      if (symbolLayer.source != null) {
        dict[$_set]("source", typeof symbolLayer.source == 'string' ? symbolLayer.source : dart.dload(symbolLayer.source, 'dict'));
      }
      if (symbolLayer.sourceLayer != null) {
        dict[$_set]("source-layer", symbolLayer.sourceLayer);
      }
      if (symbolLayer.minZoom != null) {
        dict[$_set]("minzoom", symbolLayer.minZoom);
      }
      if (symbolLayer.maxZoom != null) {
        dict[$_set]("maxzoom", symbolLayer.maxZoom);
      }
      if (symbolLayer.filter != null) {
        dict[$_set]("filter", symbolLayer.filter);
      }
      if (symbolLayer.layout != null) {
        dict[$_set]("layout", dart.nullCheck(symbolLayer.layout).dict);
      }
      if (symbolLayer.paint != null) {
        dict[$_set]("paint", dart.nullCheck(symbolLayer.paint).dict);
      }
      return dict;
    }
  };
  (symbol_layer_interop.SymbolLayerJsImpl.new = function() {
    ;
  }).prototype = symbol_layer_interop.SymbolLayerJsImpl.prototype;
  dart.addTypeTests(symbol_layer_interop.SymbolLayerJsImpl);
  dart.addTypeCaches(symbol_layer_interop.SymbolLayerJsImpl);
  dart.setLibraryUri(symbol_layer_interop.SymbolLayerJsImpl, I[27]);
  symbol_layer_interop.SymbolPaintJsImpl = class SymbolPaintJsImpl extends core.Object {
    static toJs(symbolPaint) {
      return js_util.jsify(core.Object.as(symbol_layer_interop.SymbolPaintJsImpl.toDict(symbolPaint)));
    }
    static toDict(symbolPaint) {
      let dict = new (T.IdentityMapOfString$dynamic()).new();
      if (symbolPaint.iconOpacity != null) {
        dict[$_set]("icon-opacity", symbolPaint.iconOpacity);
      }
      if (symbolPaint.iconColor != null) {
        dict[$_set]("icon-color", symbolPaint.iconColor);
      }
      if (symbolPaint.iconHaloColor != null) {
        dict[$_set]("icon-halo-color", symbolPaint.iconHaloColor);
      }
      if (symbolPaint.iconHaloWidth != null) {
        dict[$_set]("icon-halo-width", symbolPaint.iconHaloWidth);
      }
      if (symbolPaint.iconHaloBlur != null) {
        dict[$_set]("icon-halo-blur", symbolPaint.iconHaloBlur);
      }
      if (symbolPaint.iconTranslate != null) {
        dict[$_set]("icon-translate", symbolPaint.iconTranslate);
      }
      if (symbolPaint.iconTranslateAnchor != null) {
        dict[$_set]("icon-translate-anchor", symbolPaint.iconTranslateAnchor);
      }
      if (symbolPaint.textOpacity != null) {
        dict[$_set]("text-opacity", symbolPaint.textOpacity);
      }
      if (symbolPaint.textColor != null) {
        dict[$_set]("text-color", symbolPaint.textColor);
      }
      if (symbolPaint.textHaloColor != null) {
        dict[$_set]("text-halo-color", symbolPaint.textHaloColor);
      }
      if (symbolPaint.textHaloWidth != null) {
        dict[$_set]("text-halo-width", symbolPaint.textHaloWidth);
      }
      if (symbolPaint.textHaloBlur != null) {
        dict[$_set]("text-halo-blur", symbolPaint.textHaloBlur);
      }
      if (symbolPaint.textTranslate != null) {
        dict[$_set]("text-translate", symbolPaint.textTranslate);
      }
      if (symbolPaint.textTranslateAnchor != null) {
        dict[$_set]("text-translate-anchor", symbolPaint.textTranslateAnchor);
      }
      return dict;
    }
  };
  (symbol_layer_interop.SymbolPaintJsImpl.new = function() {
    ;
  }).prototype = symbol_layer_interop.SymbolPaintJsImpl.prototype;
  dart.addTypeTests(symbol_layer_interop.SymbolPaintJsImpl);
  dart.addTypeCaches(symbol_layer_interop.SymbolPaintJsImpl);
  dart.setLibraryUri(symbol_layer_interop.SymbolPaintJsImpl, I[27]);
  symbol_layer_interop.SymbolLayoutJsImpl = class SymbolLayoutJsImpl extends core.Object {
    static toJs(symbolLayout) {
      return js_util.jsify(core.Object.as(symbol_layer_interop.SymbolLayoutJsImpl.toDict(symbolLayout)));
    }
    static toDict(symbolLayout) {
      let dict = new (T.IdentityMapOfString$dynamic()).new();
      if (symbolLayout.symbolAvoidEdges != null) {
        dict[$_set]("symbol-avoid-edges", symbolLayout.symbolAvoidEdges);
      }
      if (symbolLayout.symbolSortKey != null) {
        dict[$_set]("symbol-sort-key", symbolLayout.symbolSortKey);
      }
      if (symbolLayout.symbolZOrder != null) {
        dict[$_set]("symbol-z-order", symbolLayout.symbolZOrder);
      }
      if (symbolLayout.iconAllowOverlap != null) {
        dict[$_set]("icon-allow-overlap", symbolLayout.iconAllowOverlap);
      }
      if (symbolLayout.iconIgnorePlacement != null) {
        dict[$_set]("icon-ignore-placement", symbolLayout.iconIgnorePlacement);
      }
      if (symbolLayout.iconOptional != null) {
        dict[$_set]("icon-optional", symbolLayout.iconOptional);
      }
      if (symbolLayout.iconRotationAlignment != null) {
        dict[$_set]("icon-rotation-alignment", symbolLayout.iconRotationAlignment);
      }
      if (symbolLayout.iconSize != null) {
        dict[$_set]("icon-size", symbolLayout.iconSize);
      }
      if (symbolLayout.iconTextFit != null) {
        dict[$_set]("icon-text-fit", symbolLayout.iconTextFit);
      }
      if (symbolLayout.iconFitPadding != null) {
        dict[$_set]("icon-fit-padding", symbolLayout.iconFitPadding);
      }
      if (symbolLayout.iconImage != null) {
        dict[$_set]("icon-image", symbolLayout.iconImage);
      }
      if (symbolLayout.iconRotate != null) {
        dict[$_set]("icon-rotate", symbolLayout.iconRotate);
      }
      if (symbolLayout.iconPadding != null) {
        dict[$_set]("icon-padding", symbolLayout.iconPadding);
      }
      if (symbolLayout.iconKeepUpright != null) {
        dict[$_set]("icon-keep-upright", symbolLayout.iconKeepUpright);
      }
      if (symbolLayout.iconOffset != null) {
        dict[$_set]("icon-offset", symbolLayout.iconOffset);
      }
      if (symbolLayout.iconAnchor != null) {
        dict[$_set]("icon-anchor", symbolLayout.iconAnchor);
      }
      if (symbolLayout.iconPitchAlignment != null) {
        dict[$_set]("icon-pitch-alignment", symbolLayout.iconPitchAlignment);
      }
      if (symbolLayout.textPitchAlignment != null) {
        dict[$_set]("text-pitch-alignment", symbolLayout.textPitchAlignment);
      }
      if (symbolLayout.textRotationAlignment != null) {
        dict[$_set]("text-rotation-alignment", symbolLayout.textRotationAlignment);
      }
      if (symbolLayout.textField != null) {
        dict[$_set]("text-field", symbolLayout.textField);
      }
      if (symbolLayout.textFont != null) {
        dict[$_set]("text-font", symbolLayout.textFont);
      }
      if (symbolLayout.textSize != null) {
        dict[$_set]("text-size", symbolLayout.textSize);
      }
      if (symbolLayout.textMaxWidth != null) {
        dict[$_set]("text-max-width", symbolLayout.textMaxWidth);
      }
      if (symbolLayout.textLineHeight != null) {
        dict[$_set]("text-line-height", symbolLayout.textLineHeight);
      }
      if (symbolLayout.textLetterSpacing != null) {
        dict[$_set]("text-letter-spacing", symbolLayout.textLetterSpacing);
      }
      if (symbolLayout.textJustify != null) {
        dict[$_set]("text-justify", symbolLayout.textJustify);
      }
      if (symbolLayout.textRadialOffset != null) {
        dict[$_set]("text-radial-offset", symbolLayout.textRadialOffset);
      }
      if (symbolLayout.textVariableAnchor != null) {
        dict[$_set]("text-variable-anchor", symbolLayout.textVariableAnchor);
      }
      if (symbolLayout.textAnchor != null) {
        dict[$_set]("text-anchor", symbolLayout.textAnchor);
      }
      if (symbolLayout.textMaxAngle != null) {
        dict[$_set]("text-max-angle", symbolLayout.textMaxAngle);
      }
      if (symbolLayout.textWritingMode != null) {
        dict[$_set]("text-writing-mode", symbolLayout.textWritingMode);
      }
      if (symbolLayout.textRotate != null) {
        dict[$_set]("text-rotate", symbolLayout.textRotate);
      }
      if (symbolLayout.textPadding != null) {
        dict[$_set]("text-padding", symbolLayout.textPadding);
      }
      if (symbolLayout.textKeepUpright != null) {
        dict[$_set]("text-keep-upright", symbolLayout.textKeepUpright);
      }
      if (symbolLayout.textTransform != null) {
        dict[$_set]("text-transform", symbolLayout.textTransform);
      }
      if (symbolLayout.textOffset != null) {
        dict[$_set]("text-offset", symbolLayout.textOffset);
      }
      if (symbolLayout.textAllowOverlap != null) {
        dict[$_set]("text-allow-overlap", symbolLayout.textAllowOverlap);
      }
      if (symbolLayout.textIgnorePlacement != null) {
        dict[$_set]("text-ignore-placement", symbolLayout.textIgnorePlacement);
      }
      if (symbolLayout.textOptional != null) {
        dict[$_set]("text-optional", symbolLayout.textOptional);
      }
      if (symbolLayout.visibility != null) {
        dict[$_set]("visibility", symbolLayout.visibility);
      }
      return dict;
    }
  };
  (symbol_layer_interop.SymbolLayoutJsImpl.new = function() {
    ;
  }).prototype = symbol_layer_interop.SymbolLayoutJsImpl.prototype;
  dart.addTypeTests(symbol_layer_interop.SymbolLayoutJsImpl);
  dart.addTypeCaches(symbol_layer_interop.SymbolLayoutJsImpl);
  dart.setLibraryUri(symbol_layer_interop.SymbolLayoutJsImpl, I[27]);
  line_layer_interop.LineLayerJsImpl = class LineLayerJsImpl extends core.Object {
    static toJs(lineLayer) {
      return js_util.jsify(core.Object.as(line_layer_interop.LineLayerJsImpl.toDict(lineLayer)));
    }
    static toDict(lineLayer) {
      let dict = new (T.IdentityMapOfString$dynamic()).from(["id", lineLayer.id, "type", "line"]);
      if (lineLayer.source != null) {
        dict[$_set]("source", typeof lineLayer.source == 'string' ? lineLayer.source : dart.dload(lineLayer.source, 'dict'));
      }
      if (lineLayer.sourceLayer != null) {
        dict[$_set]("source-layer", lineLayer.sourceLayer);
      }
      if (lineLayer.paint != null) {
        dict[$_set]("paint", dart.nullCheck(lineLayer.paint).dict);
      }
      if (lineLayer.layout != null) {
        dict[$_set]("layout", dart.nullCheck(lineLayer.layout).dict);
      }
      if (lineLayer.filter != null) {
        dict[$_set]("filter", lineLayer.filter);
      }
      return dict;
    }
  };
  (line_layer_interop.LineLayerJsImpl.new = function() {
    ;
  }).prototype = line_layer_interop.LineLayerJsImpl.prototype;
  dart.addTypeTests(line_layer_interop.LineLayerJsImpl);
  dart.addTypeCaches(line_layer_interop.LineLayerJsImpl);
  dart.setLibraryUri(line_layer_interop.LineLayerJsImpl, I[28]);
  line_layer_interop.LinePaintJsImpl = class LinePaintJsImpl extends core.Object {
    static toJs(linePaint) {
      return js_util.jsify(core.Object.as(line_layer_interop.LinePaintJsImpl.toDict(linePaint)));
    }
    static toDict(linePaint) {
      let dict = new (T.IdentityMapOfString$dynamic()).new();
      if (linePaint.lineOpacity != null) {
        dict[$_set]("line-opacity", linePaint.lineOpacity);
      }
      if (linePaint.lineColor != null) {
        dict[$_set]("line-color", linePaint.lineColor);
      }
      if (linePaint.lineTranslate != null) {
        dict[$_set]("line-translate", linePaint.lineTranslate);
      }
      if (linePaint.lineTranslateAnchor != null) {
        dict[$_set]("line-translate-anchor", linePaint.lineTranslateAnchor);
      }
      if (linePaint.lineWidth != null) {
        dict[$_set]("line-width", linePaint.lineWidth);
      }
      if (linePaint.lineGapWidth != null) {
        dict[$_set]("line-gap-width", linePaint.lineGapWidth);
      }
      if (linePaint.lineOffset != null) {
        dict[$_set]("line-offset", linePaint.lineOffset);
      }
      if (linePaint.lineBlur != null) {
        dict[$_set]("line-blur", linePaint.lineBlur);
      }
      if (linePaint.lineDasharray != null) {
        dict[$_set]("line-dasharray", linePaint.lineDasharray);
      }
      if (linePaint.linePattern != null) {
        dict[$_set]("line-pattern", linePaint.linePattern);
      }
      if (linePaint.lineGradient != null) {
        dict[$_set]("line-gradient", linePaint.lineGradient);
      }
      return dict;
    }
  };
  (line_layer_interop.LinePaintJsImpl.new = function() {
    ;
  }).prototype = line_layer_interop.LinePaintJsImpl.prototype;
  dart.addTypeTests(line_layer_interop.LinePaintJsImpl);
  dart.addTypeCaches(line_layer_interop.LinePaintJsImpl);
  dart.setLibraryUri(line_layer_interop.LinePaintJsImpl, I[28]);
  line_layer_interop.LineLayoutJsImpl = class LineLayoutJsImpl extends core.Object {
    static toJs(lineLayout) {
      return js_util.jsify(core.Object.as(line_layer_interop.LineLayoutJsImpl.toDict(lineLayout)));
    }
    static toDict(lineLayout) {
      let dict = new (T.IdentityMapOfString$dynamic()).new();
      if (lineLayout.lineCap != null) {
        dict[$_set]("line-cap", lineLayout.lineCap);
      }
      if (lineLayout.lineJoin != null) {
        dict[$_set]("line-join", lineLayout.lineJoin);
      }
      if (lineLayout.lineMiterLimit != null) {
        dict[$_set]("line-miter-limit", lineLayout.lineMiterLimit);
      }
      if (lineLayout.lineRoundLimit != null) {
        dict[$_set]("line-round-limit", lineLayout.lineRoundLimit);
      }
      if (lineLayout.lineSortKey != null) {
        dict[$_set]("line-sort-key", lineLayout.lineSortKey);
      }
      if (lineLayout.visibility != null) {
        dict[$_set]("visibility", lineLayout.visibility);
      }
      return dict;
    }
  };
  (line_layer_interop.LineLayoutJsImpl.new = function() {
    ;
  }).prototype = line_layer_interop.LineLayoutJsImpl.prototype;
  dart.addTypeTests(line_layer_interop.LineLayoutJsImpl);
  dart.addTypeCaches(line_layer_interop.LineLayoutJsImpl);
  dart.setLibraryUri(line_layer_interop.LineLayoutJsImpl, I[28]);
  circle_layer_interop.CircleLayerJsImpl = class CircleLayerJsImpl extends core.Object {
    static toJs(circleLayer) {
      return js_util.jsify(core.Object.as(circle_layer_interop.CircleLayerJsImpl.toDict(circleLayer)));
    }
    static toDict(circleLayer) {
      let dict = new (T.IdentityMapOfString$dynamic()).from(["id", circleLayer.id, "type", "circle"]);
      if (circleLayer.source != null) {
        dict[$_set]("source", typeof circleLayer.source == 'string' ? circleLayer.source : dart.dload(circleLayer.source, 'dict'));
      }
      if (circleLayer.sourceLayer != null) {
        dict[$_set]("source-layer", circleLayer.sourceLayer);
      }
      if (circleLayer.paint != null) {
        dict[$_set]("paint", dart.nullCheck(circleLayer.paint).dict);
      }
      return dict;
    }
  };
  (circle_layer_interop.CircleLayerJsImpl.new = function() {
    ;
  }).prototype = circle_layer_interop.CircleLayerJsImpl.prototype;
  dart.addTypeTests(circle_layer_interop.CircleLayerJsImpl);
  dart.addTypeCaches(circle_layer_interop.CircleLayerJsImpl);
  dart.setLibraryUri(circle_layer_interop.CircleLayerJsImpl, I[29]);
  circle_layer_interop.CirclePaintJsImpl = class CirclePaintJsImpl extends core.Object {
    static toJs(circlePaint) {
      return js_util.jsify(core.Object.as(circle_layer_interop.CirclePaintJsImpl.toDict(circlePaint)));
    }
    static toDict(circlePaint) {
      let dict = new (T.IdentityMapOfString$dynamic()).new();
      if (circlePaint.circleRadius != null) {
        dict[$_set]("circle-radius", circlePaint.circleRadius);
      }
      if (circlePaint.circleColor != null) {
        dict[$_set]("circle-color", circlePaint.circleColor);
      }
      return dict;
    }
  };
  (circle_layer_interop.CirclePaintJsImpl.new = function() {
    ;
  }).prototype = circle_layer_interop.CirclePaintJsImpl.prototype;
  dart.addTypeTests(circle_layer_interop.CirclePaintJsImpl);
  dart.addTypeCaches(circle_layer_interop.CirclePaintJsImpl);
  dart.setLibraryUri(circle_layer_interop.CirclePaintJsImpl, I[29]);
  geojson.FeatureCollection = class FeatureCollection extends js$.JsObjectWrapper$(dart.anonymousJSType("FeatureCollectionJsImpl")) {
    get type() {
      return this.jsObject.type;
    }
    get features() {
      return this.jsObject.features[$map](geojson.Feature, dart.fn(f => new geojson.Feature.fromJsObject(f), T.FeatureJsImplToFeature()))[$toList]();
    }
    static new(opts) {
      let features = opts && 'features' in opts ? opts.features : null;
      return new geojson.FeatureCollection.fromJsObject({type: "FeatureCollection", features: features[$map](dart.anonymousJSType("FeatureJsImpl"), dart.fn(f => f.jsObject, T.FeatureToFeatureJsImpl()))[$toList]()});
    }
  };
  (geojson.FeatureCollection.fromJsObject = function(jsObject) {
    geojson.FeatureCollection.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = geojson.FeatureCollection.prototype;
  dart.addTypeTests(geojson.FeatureCollection);
  dart.addTypeCaches(geojson.FeatureCollection);
  dart.setGetterSignature(geojson.FeatureCollection, () => ({
    __proto__: dart.getGetters(geojson.FeatureCollection.__proto__),
    type: core.String,
    features: core.List$(geojson.Feature)
  }));
  dart.setLibraryUri(geojson.FeatureCollection, I[30]);
  geojson.Feature = class Feature extends js$.JsObjectWrapper$(dart.anonymousJSType("FeatureJsImpl")) {
    get id() {
      return this.jsObject.id;
    }
    set id(id) {
      this.jsObject.id = id;
    }
    get type() {
      return this.jsObject.type;
    }
    get geometry() {
      return new geojson.Geometry.fromJsObject(this.jsObject.geometry);
    }
    get properties() {
      return utils.dartifyMap(this.jsObject.properties);
    }
    get source() {
      return this.jsObject.source;
    }
    static new(opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let geometry = opts && 'geometry' in opts ? opts.geometry : null;
      let properties = opts && 'properties' in opts ? opts.properties : null;
      let source = opts && 'source' in opts ? opts.source : null;
      return new geojson.Feature.fromJsObject({type: "Feature", id: id, geometry: geometry.jsObject, properties: properties == null ? js_util.jsify(new _js_helper.LinkedMap.new()) : js_util.jsify(properties), source: source});
    }
    copyWith(opts) {
      let t0, t0$;
      let id = opts && 'id' in opts ? opts.id : null;
      let geometry = opts && 'geometry' in opts ? opts.geometry : null;
      let properties = opts && 'properties' in opts ? opts.properties : null;
      let source = opts && 'source' in opts ? opts.source : null;
      return new geojson.Feature.fromJsObject({type: "Feature", id: (t0 = id, t0 == null ? this.id : t0), geometry: geometry != null ? geometry.jsObject : this.geometry.jsObject, properties: properties != null ? js_util.jsify(properties) : js_util.jsify(this.properties), source: (t0$ = source, t0$ == null ? this.source : t0$)});
    }
  };
  (geojson.Feature.fromJsObject = function(jsObject) {
    geojson.Feature.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = geojson.Feature.prototype;
  dart.addTypeTests(geojson.Feature);
  dart.addTypeCaches(geojson.Feature);
  dart.setMethodSignature(geojson.Feature, () => ({
    __proto__: dart.getMethods(geojson.Feature.__proto__),
    copyWith: dart.fnType(geojson.Feature, [], {geometry: dart.nullable(geojson.Geometry), id: dart.nullable(core.num), properties: dart.nullable(core.Map$(core.String, dart.dynamic)), source: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(geojson.Feature, () => ({
    __proto__: dart.getGetters(geojson.Feature.__proto__),
    id: core.num,
    type: core.String,
    geometry: geojson.Geometry,
    properties: core.Map$(core.String, dart.dynamic),
    source: core.String
  }));
  dart.setSetterSignature(geojson.Feature, () => ({
    __proto__: dart.getSetters(geojson.Feature.__proto__),
    id: core.num
  }));
  dart.setLibraryUri(geojson.Feature, I[30]);
  geojson.Geometry = class Geometry extends js$.JsObjectWrapper$(dart.anonymousJSType("GeometryJsImpl")) {
    get type() {
      return this.jsObject.type;
    }
    get coordinates() {
      return this.jsObject.coordinates;
    }
    static new(opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let coordinates = opts && 'coordinates' in opts ? opts.coordinates : null;
      return new geojson.Geometry.fromJsObject({type: type, coordinates: coordinates});
    }
  };
  (geojson.Geometry.fromJsObject = function(jsObject) {
    geojson.Geometry.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = geojson.Geometry.prototype;
  dart.addTypeTests(geojson.Geometry);
  dart.addTypeCaches(geojson.Geometry);
  dart.setGetterSignature(geojson.Geometry, () => ({
    __proto__: dart.getGetters(geojson.Geometry.__proto__),
    type: core.String,
    coordinates: dart.dynamic
  }));
  dart.setLibraryUri(geojson.Geometry, I[30]);
  dart.trackLibraries("packages/mapbox_gl_dart/src/util/evented.dart", {
    "package:mapbox_gl_dart/src/util/evented.dart": evented,
    "package:mapbox_gl_dart/src/ui/popup.dart": popup,
    "package:mapbox_gl_dart/src/ui/marker.dart": marker,
    "package:mapbox_gl_dart/src/ui/map.dart": map,
    "package:mapbox_gl_dart/src/ui/handler/touch_zoom_rotate.dart": touch_zoom_rotate,
    "package:mapbox_gl_dart/src/ui/handler/scroll_zoom.dart": scroll_zoom,
    "package:mapbox_gl_dart/src/ui/handler/keyboard.dart": keyboard,
    "package:mapbox_gl_dart/src/ui/handler/drag_rotate.dart": drag_rotate,
    "package:mapbox_gl_dart/src/ui/handler/drag_pan.dart": drag_pan,
    "package:mapbox_gl_dart/src/ui/handler/dblclick_zoom.dart": dblclick_zoom,
    "package:mapbox_gl_dart/src/ui/handler/box_zoom.dart": box_zoom,
    "package:mapbox_gl_dart/src/ui/events.dart": events,
    "package:mapbox_gl_dart/src/ui/control/navigation_control.dart": navigation_control,
    "package:mapbox_gl_dart/src/ui/control/logo_control.dart": logo_control,
    "package:mapbox_gl_dart/src/ui/control/geolocate_control.dart": geolocate_control,
    "package:mapbox_gl_dart/src/ui/camera.dart": camera,
    "package:mapbox_gl_dart/src/style/style_image.dart": style_image,
    "package:mapbox_gl_dart/src/style/style.dart": style,
    "package:mapbox_gl_dart/src/style/sources/vector_source.dart": vector_source,
    "package:mapbox_gl_dart/src/style/sources/geojson_source.dart": geojson_source,
    "package:mapbox_gl_dart/src/style/layers/symbol_layer.dart": symbol_layer,
    "package:mapbox_gl_dart/src/style/layers/line_layer.dart": line_layer,
    "package:mapbox_gl_dart/src/style/layers/circle_layer.dart": circle_layer,
    "package:mapbox_gl_dart/src/style/evaluation_parameters.dart": evaluation_parameters,
    "package:mapbox_gl_dart/src/geo/point.dart": point,
    "package:mapbox_gl_dart/src/geo/lng_lat_bounds.dart": lng_lat_bounds,
    "package:mapbox_gl_dart/src/geo/lng_lat.dart": lng_lat,
    "package:mapbox_gl_dart/src/interop/util/evented_interop.dart": evented_interop,
    "package:mapbox_gl_dart/src/interop/ui/popup_interop.dart": popup_interop,
    "package:mapbox_gl_dart/src/interop/ui/marker_interop.dart": marker_interop,
    "package:mapbox_gl_dart/src/interop/ui/map_interop.dart": map_interop,
    "package:mapbox_gl_dart/src/interop/ui/handler/dblclick_zoom_interop.dart": dblclick_zoom_interop,
    "package:mapbox_gl_dart/src/interop/ui/events_interop.dart": events_interop,
    "package:mapbox_gl_dart/src/interop/ui/control/navigation_control_interop.dart": navigation_control_interop,
    "package:mapbox_gl_dart/src/interop/ui/control/logo_control_interop.dart": logo_control_interop,
    "package:mapbox_gl_dart/src/interop/ui/control/geolocate_control_interop.dart": geolocate_control_interop,
    "package:mapbox_gl_dart/src/interop/ui/camera_interop.dart": camera_interop,
    "package:mapbox_gl_dart/src/interop/style/style_interop.dart": style_interop,
    "package:mapbox_gl_dart/src/interop/style/style_image_interop.dart": style_image_interop,
    "package:mapbox_gl_dart/src/interop/style/sources/geojson_source_interop.dart": geojson_source_interop,
    "package:mapbox_gl_dart/src/interop/style/layers/symbol_layer_interop.dart": symbol_layer_interop,
    "package:mapbox_gl_dart/src/interop/style/layers/line_layer_interop.dart": line_layer_interop,
    "package:mapbox_gl_dart/src/interop/style/layers/circle_layer_interop.dart": circle_layer_interop,
    "package:mapbox_gl_dart/src/interop/geo/lng_lat_interop.dart": lng_lat_interop,
    "package:mapbox_gl_dart/src/interop/geo/lng_lat_bounds_interop.dart": lng_lat_bounds_interop,
    "package:mapbox_gl_dart/src/interop/interop.dart": interop,
    "package:mapbox_gl_dart/src/geo/geojson.dart": geojson,
    "package:mapbox_gl_dart/mapbox_gl_dart.dart": mapbox_gl_dart
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["evented.dart","../ui/popup.dart","../ui/marker.dart","../ui/camera.dart","../ui/map.dart","../ui/handler/touch_zoom_rotate.dart","../ui/handler/scroll_zoom.dart","../ui/handler/keyboard.dart","../ui/handler/drag_rotate.dart","../ui/handler/drag_pan.dart","../ui/handler/dblclick_zoom.dart","../ui/handler/box_zoom.dart","../ui/events.dart","../ui/control/navigation_control.dart","../ui/control/logo_control.dart","../ui/control/geolocate_control.dart","../style/style_image.dart","../style/style.dart","../style/sources/vector_source.dart","../style/sources/geojson_source.dart","../style/layers/symbol_layer.dart","../style/layers/line_layer.dart","../style/layers/circle_layer.dart","../style/evaluation_parameters.dart","../geo/point.dart","../geo/lng_lat_bounds.dart","../geo/lng_lat.dart","../interop/style/layers/symbol_layer_interop.dart","../interop/style/layers/line_layer_interop.dart","../interop/style/layers/circle_layer_interop.dart","../geo/geojson.dart"],"names":[],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;IAUG;;;;;;IACG;;;;;;IACA;;;;;;IACH;;;;;;IACA;;;;;;IACM;;;;;;IACH;;;;;;IACH;;;;;;IACG;;;;;;IACA;;;;;;IACH;;;;;;IACA;;;;;;IACM;;;;;;IACH;;;;;;;AAmBQ,YAAkB,6CAAK;IAAK;;AAEhC,YAAkB,+CAAO;IAAK;;;QAlBnC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAbA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQI;;;;;;IACD;;;;;;IACG;;;;;;IACF;;;;;;IACA;;;;;;IACA;;;;;;IACE;;;;;;IACH;;;;;;IACG;;;;;;IACG;;;;;;IACH;;;;;;IACH;;;;;;IACA;;;;;;IACC;;;;;;IACK;;;;;;IACH;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACM;;;;;;IACT;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACG;;;;;;IACH;;;;;;IACS;;;;;;IACN;;;;;;IACH;;;;;;IACS;;;;;;IACT;;;;;;IACA;;;;;;IACC;;;;;;IACE;;;;;;IACG;;;;;;IACL;;;;;;IACA;;;;;;IACA;;;;;;IACE;;;;;;;AA6CQ,YAAmB,8CAAK;IAAK;;AAEjC,YAAmB,gDAAO;IAAK;;;QA5CpC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAvCA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAC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","file":"../../../../../../../../../packages/mapbox_gl_dart/src/util/evented.dart.lib.js"}');
  // Exports:
  return {
    src__util__evented: evented,
    src__ui__popup: popup,
    src__ui__marker: marker,
    src__ui__map: map,
    src__ui__handler__touch_zoom_rotate: touch_zoom_rotate,
    src__ui__handler__scroll_zoom: scroll_zoom,
    src__ui__handler__keyboard: keyboard,
    src__ui__handler__drag_rotate: drag_rotate,
    src__ui__handler__drag_pan: drag_pan,
    src__ui__handler__dblclick_zoom: dblclick_zoom,
    src__ui__handler__box_zoom: box_zoom,
    src__ui__events: events,
    src__ui__control__navigation_control: navigation_control,
    src__ui__control__logo_control: logo_control,
    src__ui__control__geolocate_control: geolocate_control,
    src__ui__camera: camera,
    src__style__style_image: style_image,
    src__style__style: style,
    src__style__sources__vector_source: vector_source,
    src__style__sources__geojson_source: geojson_source,
    src__style__layers__symbol_layer: symbol_layer,
    src__style__layers__line_layer: line_layer,
    src__style__layers__circle_layer: circle_layer,
    src__style__evaluation_parameters: evaluation_parameters,
    src__geo__point: point,
    src__geo__lng_lat_bounds: lng_lat_bounds,
    src__geo__lng_lat: lng_lat,
    src__interop__util__evented_interop: evented_interop,
    src__interop__ui__popup_interop: popup_interop,
    src__interop__ui__marker_interop: marker_interop,
    src__interop__ui__map_interop: map_interop,
    src__interop__ui__handler__dblclick_zoom_interop: dblclick_zoom_interop,
    src__interop__ui__events_interop: events_interop,
    src__interop__ui__control__navigation_control_interop: navigation_control_interop,
    src__interop__ui__control__logo_control_interop: logo_control_interop,
    src__interop__ui__control__geolocate_control_interop: geolocate_control_interop,
    src__interop__ui__camera_interop: camera_interop,
    src__interop__style__style_interop: style_interop,
    src__interop__style__style_image_interop: style_image_interop,
    src__interop__style__sources__geojson_source_interop: geojson_source_interop,
    src__interop__style__layers__symbol_layer_interop: symbol_layer_interop,
    src__interop__style__layers__line_layer_interop: line_layer_interop,
    src__interop__style__layers__circle_layer_interop: circle_layer_interop,
    src__interop__geo__lng_lat_interop: lng_lat_interop,
    src__interop__geo__lng_lat_bounds_interop: lng_lat_bounds_interop,
    src__interop__interop: interop,
    src__geo__geojson: geojson,
    mapbox_gl_dart: mapbox_gl_dart
  };
}));

//# sourceMappingURL=evented.dart.lib.js.map
